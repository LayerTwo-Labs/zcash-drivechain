// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cusf/common/v1/common.proto
// Protobuf C++ Version: 6.30.1

#include "cusf/common/v1/common.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cusf {
namespace common {
namespace v1 {

inline constexpr ReverseHex::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        hex_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ReverseHex::ReverseHex(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ReverseHex_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ReverseHexDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReverseHexDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReverseHexDefaultTypeInternal() {}
  union {
    ReverseHex _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReverseHexDefaultTypeInternal _ReverseHex_default_instance_;

inline constexpr Hex::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        hex_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Hex::Hex(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Hex_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HexDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HexDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HexDefaultTypeInternal() {}
  union {
    Hex _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HexDefaultTypeInternal _Hex_default_instance_;

inline constexpr ConsensusHex::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        hex_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ConsensusHex::ConsensusHex(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ConsensusHex_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConsensusHexDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConsensusHexDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConsensusHexDefaultTypeInternal() {}
  union {
    ConsensusHex _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConsensusHexDefaultTypeInternal _ConsensusHex_default_instance_;
}  // namespace v1
}  // namespace common
}  // namespace cusf
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_cusf_2fcommon_2fv1_2fcommon_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_cusf_2fcommon_2fv1_2fcommon_2eproto = nullptr;
const ::uint32_t
    TableStruct_cusf_2fcommon_2fv1_2fcommon_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cusf::common::v1::ConsensusHex, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cusf::common::v1::ConsensusHex, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cusf::common::v1::ConsensusHex, _impl_.hex_),
        0,
        PROTOBUF_FIELD_OFFSET(::cusf::common::v1::Hex, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cusf::common::v1::Hex, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cusf::common::v1::Hex, _impl_.hex_),
        0,
        PROTOBUF_FIELD_OFFSET(::cusf::common::v1::ReverseHex, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cusf::common::v1::ReverseHex, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cusf::common::v1::ReverseHex, _impl_.hex_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 9, -1, sizeof(::cusf::common::v1::ConsensusHex)},
        {10, 19, -1, sizeof(::cusf::common::v1::Hex)},
        {20, 29, -1, sizeof(::cusf::common::v1::ReverseHex)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::cusf::common::v1::_ConsensusHex_default_instance_._instance,
    &::cusf::common::v1::_Hex_default_instance_._instance,
    &::cusf::common::v1::_ReverseHex_default_instance_._instance,
};
const char descriptor_table_protodef_cusf_2fcommon_2fv1_2fcommon_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\033cusf/common/v1/common.proto\022\016cusf.comm"
    "on.v1\032\036google/protobuf/wrappers.proto\">\n"
    "\014ConsensusHex\022.\n\003hex\030\001 \001(\0132\034.google.prot"
    "obuf.StringValueR\003hex\"5\n\003Hex\022.\n\003hex\030\001 \001("
    "\0132\034.google.protobuf.StringValueR\003hex\"<\n\n"
    "ReverseHex\022.\n\003hex\030\001 \001(\0132\034.google.protobu"
    "f.StringValueR\003hexB{\n\022com.cusf.common.v1"
    "B\013CommonProtoP\001\242\002\003CCX\252\002\016Cusf.Common.V1\312\002"
    "\016Cusf\\Common\\V1\342\002\032Cusf\\Common\\V1\\GPBMeta"
    "data\352\002\020Cusf::Common::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_cusf_2fcommon_2fv1_2fcommon_2eproto_deps[1] = {
        &::descriptor_table_google_2fprotobuf_2fwrappers_2eproto,
};
static ::absl::once_flag descriptor_table_cusf_2fcommon_2fv1_2fcommon_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cusf_2fcommon_2fv1_2fcommon_2eproto = {
    false,
    false,
    391,
    descriptor_table_protodef_cusf_2fcommon_2fv1_2fcommon_2eproto,
    "cusf/common/v1/common.proto",
    &descriptor_table_cusf_2fcommon_2fv1_2fcommon_2eproto_once,
    descriptor_table_cusf_2fcommon_2fv1_2fcommon_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_cusf_2fcommon_2fv1_2fcommon_2eproto::offsets,
    file_level_enum_descriptors_cusf_2fcommon_2fv1_2fcommon_2eproto,
    file_level_service_descriptors_cusf_2fcommon_2fv1_2fcommon_2eproto,
};
namespace cusf {
namespace common {
namespace v1 {
// ===================================================================

class ConsensusHex::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ConsensusHex>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ConsensusHex, _impl_._has_bits_);
};

void ConsensusHex::clear_hex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hex_ != nullptr) _impl_.hex_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ConsensusHex::ConsensusHex(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConsensusHex_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cusf.common.v1.ConsensusHex)
}
PROTOBUF_NDEBUG_INLINE ConsensusHex::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::cusf::common::v1::ConsensusHex& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ConsensusHex::ConsensusHex(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ConsensusHex& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConsensusHex_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConsensusHex* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.hex_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.hex_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:cusf.common.v1.ConsensusHex)
}
PROTOBUF_NDEBUG_INLINE ConsensusHex::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ConsensusHex::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.hex_ = {};
}
ConsensusHex::~ConsensusHex() {
  // @@protoc_insertion_point(destructor:cusf.common.v1.ConsensusHex)
  SharedDtor(*this);
}
inline void ConsensusHex::SharedDtor(MessageLite& self) {
  ConsensusHex& this_ = static_cast<ConsensusHex&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.hex_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ConsensusHex::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ConsensusHex(arena);
}
constexpr auto ConsensusHex::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ConsensusHex),
                                            alignof(ConsensusHex));
}
constexpr auto ConsensusHex::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ConsensusHex_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ConsensusHex::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ConsensusHex>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ConsensusHex::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ConsensusHex>(), &ConsensusHex::ByteSizeLong,
              &ConsensusHex::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ConsensusHex, _impl_._cached_size_),
          false,
      },
      &ConsensusHex::kDescriptorMethods,
      &descriptor_table_cusf_2fcommon_2fv1_2fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ConsensusHex_class_data_ =
            ConsensusHex::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL ConsensusHex::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ConsensusHex_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ConsensusHex_class_data_.tc_table);
  return ConsensusHex_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
ConsensusHex::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConsensusHex, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ConsensusHex_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cusf::common::v1::ConsensusHex>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.StringValue hex = 1 [json_name = "hex"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ConsensusHex, _impl_.hex_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.StringValue hex = 1 [json_name = "hex"];
    {PROTOBUF_FIELD_OFFSET(ConsensusHex, _impl_.hex_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::StringValue>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ConsensusHex::Clear() {
// @@protoc_insertion_point(message_clear_start:cusf.common.v1.ConsensusHex)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.hex_ != nullptr);
    _impl_.hex_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ConsensusHex::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ConsensusHex& this_ = static_cast<const ConsensusHex&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ConsensusHex::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ConsensusHex& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:cusf.common.v1.ConsensusHex)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.StringValue hex = 1 [json_name = "hex"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.hex_, this_._impl_.hex_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cusf.common.v1.ConsensusHex)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ConsensusHex::ByteSizeLong(const MessageLite& base) {
  const ConsensusHex& this_ = static_cast<const ConsensusHex&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ConsensusHex::ByteSizeLong() const {
  const ConsensusHex& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:cusf.common.v1.ConsensusHex)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .google.protobuf.StringValue hex = 1 [json_name = "hex"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.hex_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ConsensusHex::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConsensusHex*>(&to_msg);
  auto& from = static_cast<const ConsensusHex&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cusf.common.v1.ConsensusHex)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.hex_ != nullptr);
    if (_this->_impl_.hex_ == nullptr) {
      _this->_impl_.hex_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.hex_);
    } else {
      _this->_impl_.hex_->MergeFrom(*from._impl_.hex_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConsensusHex::CopyFrom(const ConsensusHex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cusf.common.v1.ConsensusHex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConsensusHex::InternalSwap(ConsensusHex* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.hex_, other->_impl_.hex_);
}

::google::protobuf::Metadata ConsensusHex::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Hex::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Hex>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Hex, _impl_._has_bits_);
};

void Hex::clear_hex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hex_ != nullptr) _impl_.hex_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Hex::Hex(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Hex_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cusf.common.v1.Hex)
}
PROTOBUF_NDEBUG_INLINE Hex::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::cusf::common::v1::Hex& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Hex::Hex(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Hex& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Hex_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Hex* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.hex_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.hex_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:cusf.common.v1.Hex)
}
PROTOBUF_NDEBUG_INLINE Hex::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Hex::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.hex_ = {};
}
Hex::~Hex() {
  // @@protoc_insertion_point(destructor:cusf.common.v1.Hex)
  SharedDtor(*this);
}
inline void Hex::SharedDtor(MessageLite& self) {
  Hex& this_ = static_cast<Hex&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.hex_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Hex::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Hex(arena);
}
constexpr auto Hex::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Hex),
                                            alignof(Hex));
}
constexpr auto Hex::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Hex_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Hex::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Hex>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Hex::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Hex>(), &Hex::ByteSizeLong,
              &Hex::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Hex, _impl_._cached_size_),
          false,
      },
      &Hex::kDescriptorMethods,
      &descriptor_table_cusf_2fcommon_2fv1_2fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        Hex_class_data_ =
            Hex::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL Hex::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Hex_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Hex_class_data_.tc_table);
  return Hex_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
Hex::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Hex, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Hex_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cusf::common::v1::Hex>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.StringValue hex = 1 [json_name = "hex"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Hex, _impl_.hex_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.StringValue hex = 1 [json_name = "hex"];
    {PROTOBUF_FIELD_OFFSET(Hex, _impl_.hex_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::StringValue>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Hex::Clear() {
// @@protoc_insertion_point(message_clear_start:cusf.common.v1.Hex)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.hex_ != nullptr);
    _impl_.hex_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Hex::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Hex& this_ = static_cast<const Hex&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Hex::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Hex& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:cusf.common.v1.Hex)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.StringValue hex = 1 [json_name = "hex"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.hex_, this_._impl_.hex_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cusf.common.v1.Hex)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Hex::ByteSizeLong(const MessageLite& base) {
  const Hex& this_ = static_cast<const Hex&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Hex::ByteSizeLong() const {
  const Hex& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:cusf.common.v1.Hex)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .google.protobuf.StringValue hex = 1 [json_name = "hex"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.hex_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Hex::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Hex*>(&to_msg);
  auto& from = static_cast<const Hex&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cusf.common.v1.Hex)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.hex_ != nullptr);
    if (_this->_impl_.hex_ == nullptr) {
      _this->_impl_.hex_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.hex_);
    } else {
      _this->_impl_.hex_->MergeFrom(*from._impl_.hex_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Hex::CopyFrom(const Hex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cusf.common.v1.Hex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Hex::InternalSwap(Hex* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.hex_, other->_impl_.hex_);
}

::google::protobuf::Metadata Hex::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ReverseHex::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ReverseHex>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ReverseHex, _impl_._has_bits_);
};

void ReverseHex::clear_hex() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hex_ != nullptr) _impl_.hex_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
ReverseHex::ReverseHex(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ReverseHex_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cusf.common.v1.ReverseHex)
}
PROTOBUF_NDEBUG_INLINE ReverseHex::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::cusf::common::v1::ReverseHex& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ReverseHex::ReverseHex(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ReverseHex& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ReverseHex_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ReverseHex* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.hex_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.hex_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:cusf.common.v1.ReverseHex)
}
PROTOBUF_NDEBUG_INLINE ReverseHex::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void ReverseHex::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.hex_ = {};
}
ReverseHex::~ReverseHex() {
  // @@protoc_insertion_point(destructor:cusf.common.v1.ReverseHex)
  SharedDtor(*this);
}
inline void ReverseHex::SharedDtor(MessageLite& self) {
  ReverseHex& this_ = static_cast<ReverseHex&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.hex_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ReverseHex::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ReverseHex(arena);
}
constexpr auto ReverseHex::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ReverseHex),
                                            alignof(ReverseHex));
}
constexpr auto ReverseHex::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ReverseHex_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ReverseHex::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ReverseHex>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ReverseHex::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ReverseHex>(), &ReverseHex::ByteSizeLong,
              &ReverseHex::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ReverseHex, _impl_._cached_size_),
          false,
      },
      &ReverseHex::kDescriptorMethods,
      &descriptor_table_cusf_2fcommon_2fv1_2fcommon_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        ReverseHex_class_data_ =
            ReverseHex::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL ReverseHex::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ReverseHex_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ReverseHex_class_data_.tc_table);
  return ReverseHex_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
ReverseHex::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ReverseHex, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ReverseHex_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cusf::common::v1::ReverseHex>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .google.protobuf.StringValue hex = 1 [json_name = "hex"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ReverseHex, _impl_.hex_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.StringValue hex = 1 [json_name = "hex"];
    {PROTOBUF_FIELD_OFFSET(ReverseHex, _impl_.hex_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::StringValue>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ReverseHex::Clear() {
// @@protoc_insertion_point(message_clear_start:cusf.common.v1.ReverseHex)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.hex_ != nullptr);
    _impl_.hex_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ReverseHex::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ReverseHex& this_ = static_cast<const ReverseHex&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ReverseHex::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ReverseHex& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:cusf.common.v1.ReverseHex)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.StringValue hex = 1 [json_name = "hex"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.hex_, this_._impl_.hex_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cusf.common.v1.ReverseHex)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ReverseHex::ByteSizeLong(const MessageLite& base) {
  const ReverseHex& this_ = static_cast<const ReverseHex&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ReverseHex::ByteSizeLong() const {
  const ReverseHex& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:cusf.common.v1.ReverseHex)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .google.protobuf.StringValue hex = 1 [json_name = "hex"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.hex_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ReverseHex::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ReverseHex*>(&to_msg);
  auto& from = static_cast<const ReverseHex&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cusf.common.v1.ReverseHex)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.hex_ != nullptr);
    if (_this->_impl_.hex_ == nullptr) {
      _this->_impl_.hex_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.hex_);
    } else {
      _this->_impl_.hex_->MergeFrom(*from._impl_.hex_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ReverseHex::CopyFrom(const ReverseHex& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cusf.common.v1.ReverseHex)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ReverseHex::InternalSwap(ReverseHex* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.hex_, other->_impl_.hex_);
}

::google::protobuf::Metadata ReverseHex::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace common
}  // namespace cusf
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_cusf_2fcommon_2fv1_2fcommon_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
