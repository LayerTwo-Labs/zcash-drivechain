// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cusf/crypto/v1/crypto.proto
// Protobuf C++ Version: 6.30.1

#include "cusf/crypto/v1/crypto.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace cusf {
namespace crypto {
namespace v1 {

inline constexpr Secp256k1VerifyResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        valid_{false} {}

template <typename>
PROTOBUF_CONSTEXPR Secp256k1VerifyResponse::Secp256k1VerifyResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Secp256k1VerifyResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Secp256k1VerifyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Secp256k1VerifyResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Secp256k1VerifyResponseDefaultTypeInternal() {}
  union {
    Secp256k1VerifyResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Secp256k1VerifyResponseDefaultTypeInternal _Secp256k1VerifyResponse_default_instance_;

inline constexpr Secp256k1VerifyRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_{nullptr},
        signature_{nullptr},
        public_key_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Secp256k1VerifyRequest::Secp256k1VerifyRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Secp256k1VerifyRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Secp256k1VerifyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Secp256k1VerifyRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Secp256k1VerifyRequestDefaultTypeInternal() {}
  union {
    Secp256k1VerifyRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Secp256k1VerifyRequestDefaultTypeInternal _Secp256k1VerifyRequest_default_instance_;

inline constexpr Secp256k1SignResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        signature_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Secp256k1SignResponse::Secp256k1SignResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Secp256k1SignResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Secp256k1SignResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Secp256k1SignResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Secp256k1SignResponseDefaultTypeInternal() {}
  union {
    Secp256k1SignResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Secp256k1SignResponseDefaultTypeInternal _Secp256k1SignResponse_default_instance_;

inline constexpr Secp256k1SignRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_{nullptr},
        secret_key_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Secp256k1SignRequest::Secp256k1SignRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Secp256k1SignRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Secp256k1SignRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Secp256k1SignRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Secp256k1SignRequestDefaultTypeInternal() {}
  union {
    Secp256k1SignRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Secp256k1SignRequestDefaultTypeInternal _Secp256k1SignRequest_default_instance_;

inline constexpr Secp256k1SecretKeyToPublicKeyResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        public_key_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Secp256k1SecretKeyToPublicKeyResponse::Secp256k1SecretKeyToPublicKeyResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Secp256k1SecretKeyToPublicKeyResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Secp256k1SecretKeyToPublicKeyResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Secp256k1SecretKeyToPublicKeyResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Secp256k1SecretKeyToPublicKeyResponseDefaultTypeInternal() {}
  union {
    Secp256k1SecretKeyToPublicKeyResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Secp256k1SecretKeyToPublicKeyResponseDefaultTypeInternal _Secp256k1SecretKeyToPublicKeyResponse_default_instance_;

inline constexpr Secp256k1SecretKeyToPublicKeyRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        secret_key_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Secp256k1SecretKeyToPublicKeyRequest::Secp256k1SecretKeyToPublicKeyRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Secp256k1SecretKeyToPublicKeyRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Secp256k1SecretKeyToPublicKeyRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Secp256k1SecretKeyToPublicKeyRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Secp256k1SecretKeyToPublicKeyRequestDefaultTypeInternal() {}
  union {
    Secp256k1SecretKeyToPublicKeyRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Secp256k1SecretKeyToPublicKeyRequestDefaultTypeInternal _Secp256k1SecretKeyToPublicKeyRequest_default_instance_;

inline constexpr Ripemd160Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        digest_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Ripemd160Response::Ripemd160Response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Ripemd160Response_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Ripemd160ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Ripemd160ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Ripemd160ResponseDefaultTypeInternal() {}
  union {
    Ripemd160Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Ripemd160ResponseDefaultTypeInternal _Ripemd160Response_default_instance_;

inline constexpr Ripemd160Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        msg_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Ripemd160Request::Ripemd160Request(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Ripemd160Request_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct Ripemd160RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Ripemd160RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Ripemd160RequestDefaultTypeInternal() {}
  union {
    Ripemd160Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Ripemd160RequestDefaultTypeInternal _Ripemd160Request_default_instance_;

inline constexpr HmacSha512Response::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        hmac_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR HmacSha512Response::HmacSha512Response(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(HmacSha512Response_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HmacSha512ResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HmacSha512ResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HmacSha512ResponseDefaultTypeInternal() {}
  union {
    HmacSha512Response _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HmacSha512ResponseDefaultTypeInternal _HmacSha512Response_default_instance_;

inline constexpr HmacSha512Request::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        key_{nullptr},
        msg_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR HmacSha512Request::HmacSha512Request(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(HmacSha512Request_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HmacSha512RequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HmacSha512RequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HmacSha512RequestDefaultTypeInternal() {}
  union {
    HmacSha512Request _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HmacSha512RequestDefaultTypeInternal _HmacSha512Request_default_instance_;
}  // namespace v1
}  // namespace crypto
}  // namespace cusf
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_cusf_2fcrypto_2fv1_2fcrypto_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_cusf_2fcrypto_2fv1_2fcrypto_2eproto = nullptr;
const ::uint32_t
    TableStruct_cusf_2fcrypto_2fv1_2fcrypto_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::HmacSha512Request, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::HmacSha512Request, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::HmacSha512Request, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::HmacSha512Request, _impl_.msg_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::HmacSha512Response, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::HmacSha512Response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::HmacSha512Response, _impl_.hmac_),
        0,
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Ripemd160Request, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Ripemd160Request, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Ripemd160Request, _impl_.msg_),
        0,
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Ripemd160Response, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Ripemd160Response, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Ripemd160Response, _impl_.digest_),
        0,
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1SecretKeyToPublicKeyRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1SecretKeyToPublicKeyRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1SecretKeyToPublicKeyRequest, _impl_.secret_key_),
        0,
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1SecretKeyToPublicKeyResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1SecretKeyToPublicKeyResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1SecretKeyToPublicKeyResponse, _impl_.public_key_),
        0,
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1SignRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1SignRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1SignRequest, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1SignRequest, _impl_.secret_key_),
        0,
        1,
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1SignResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1SignResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1SignResponse, _impl_.signature_),
        0,
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1VerifyRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1VerifyRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1VerifyRequest, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1VerifyRequest, _impl_.signature_),
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1VerifyRequest, _impl_.public_key_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1VerifyResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1VerifyResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::cusf::crypto::v1::Secp256k1VerifyResponse, _impl_.valid_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::cusf::crypto::v1::HmacSha512Request)},
        {12, 21, -1, sizeof(::cusf::crypto::v1::HmacSha512Response)},
        {22, 31, -1, sizeof(::cusf::crypto::v1::Ripemd160Request)},
        {32, 41, -1, sizeof(::cusf::crypto::v1::Ripemd160Response)},
        {42, 51, -1, sizeof(::cusf::crypto::v1::Secp256k1SecretKeyToPublicKeyRequest)},
        {52, 61, -1, sizeof(::cusf::crypto::v1::Secp256k1SecretKeyToPublicKeyResponse)},
        {62, 72, -1, sizeof(::cusf::crypto::v1::Secp256k1SignRequest)},
        {74, 83, -1, sizeof(::cusf::crypto::v1::Secp256k1SignResponse)},
        {84, 95, -1, sizeof(::cusf::crypto::v1::Secp256k1VerifyRequest)},
        {98, 107, -1, sizeof(::cusf::crypto::v1::Secp256k1VerifyResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::cusf::crypto::v1::_HmacSha512Request_default_instance_._instance,
    &::cusf::crypto::v1::_HmacSha512Response_default_instance_._instance,
    &::cusf::crypto::v1::_Ripemd160Request_default_instance_._instance,
    &::cusf::crypto::v1::_Ripemd160Response_default_instance_._instance,
    &::cusf::crypto::v1::_Secp256k1SecretKeyToPublicKeyRequest_default_instance_._instance,
    &::cusf::crypto::v1::_Secp256k1SecretKeyToPublicKeyResponse_default_instance_._instance,
    &::cusf::crypto::v1::_Secp256k1SignRequest_default_instance_._instance,
    &::cusf::crypto::v1::_Secp256k1SignResponse_default_instance_._instance,
    &::cusf::crypto::v1::_Secp256k1VerifyRequest_default_instance_._instance,
    &::cusf::crypto::v1::_Secp256k1VerifyResponse_default_instance_._instance,
};
const char descriptor_table_protodef_cusf_2fcrypto_2fv1_2fcrypto_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\033cusf/crypto/v1/crypto.proto\022\016cusf.cryp"
    "to.v1\032\033cusf/common/v1/common.proto\"a\n\021Hm"
    "acSha512Request\022%\n\003key\030\001 \001(\0132\023.cusf.comm"
    "on.v1.HexR\003key\022%\n\003msg\030\002 \001(\0132\023.cusf.commo"
    "n.v1.HexR\003msg\"=\n\022HmacSha512Response\022\'\n\004h"
    "mac\030\001 \001(\0132\023.cusf.common.v1.HexR\004hmac\"9\n\020"
    "Ripemd160Request\022%\n\003msg\030\001 \001(\0132\023.cusf.com"
    "mon.v1.HexR\003msg\"@\n\021Ripemd160Response\022+\n\006"
    "digest\030\001 \001(\0132\023.cusf.common.v1.HexR\006diges"
    "t\"c\n$Secp256k1SecretKeyToPublicKeyReques"
    "t\022;\n\nsecret_key\030\001 \001(\0132\034.cusf.common.v1.C"
    "onsensusHexR\tsecretKey\"d\n%Secp256k1Secre"
    "tKeyToPublicKeyResponse\022;\n\npublic_key\030\001 "
    "\001(\0132\034.cusf.common.v1.ConsensusHexR\tpubli"
    "cKey\"\202\001\n\024Secp256k1SignRequest\022-\n\007message"
    "\030\001 \001(\0132\023.cusf.common.v1.HexR\007message\022;\n\n"
    "secret_key\030\002 \001(\0132\034.cusf.common.v1.Consen"
    "susHexR\tsecretKey\"J\n\025Secp256k1SignRespon"
    "se\0221\n\tsignature\030\001 \001(\0132\023.cusf.common.v1.H"
    "exR\tsignature\"\267\001\n\026Secp256k1VerifyRequest"
    "\022-\n\007message\030\001 \001(\0132\023.cusf.common.v1.HexR\007"
    "message\0221\n\tsignature\030\002 \001(\0132\023.cusf.common"
    ".v1.HexR\tsignature\022;\n\npublic_key\030\003 \001(\0132\034"
    ".cusf.common.v1.ConsensusHexR\tpublicKey\""
    "/\n\027Secp256k1VerifyResponse\022\024\n\005valid\030\001 \001("
    "\010R\005valid2\207\004\n\rCryptoService\022S\n\nHmacSha512"
    "\022!.cusf.crypto.v1.HmacSha512Request\032\".cu"
    "sf.crypto.v1.HmacSha512Response\022P\n\tRipem"
    "d160\022 .cusf.crypto.v1.Ripemd160Request\032!"
    ".cusf.crypto.v1.Ripemd160Response\022\214\001\n\035Se"
    "cp256k1SecretKeyToPublicKey\0224.cusf.crypt"
    "o.v1.Secp256k1SecretKeyToPublicKeyReques"
    "t\0325.cusf.crypto.v1.Secp256k1SecretKeyToP"
    "ublicKeyResponse\022\\\n\rSecp256k1Sign\022$.cusf"
    ".crypto.v1.Secp256k1SignRequest\032%.cusf.c"
    "rypto.v1.Secp256k1SignResponse\022b\n\017Secp25"
    "6k1Verify\022&.cusf.crypto.v1.Secp256k1Veri"
    "fyRequest\032\'.cusf.crypto.v1.Secp256k1Veri"
    "fyResponseB{\n\022com.cusf.crypto.v1B\013Crypto"
    "ProtoP\001\242\002\003CCX\252\002\016Cusf.Crypto.V1\312\002\016Cusf\\Cr"
    "ypto\\V1\342\002\032Cusf\\Crypto\\V1\\GPBMetadata\352\002\020C"
    "usf::Crypto::V1b\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_cusf_2fcrypto_2fv1_2fcrypto_2eproto_deps[1] = {
        &::descriptor_table_cusf_2fcommon_2fv1_2fcommon_2eproto,
};
static ::absl::once_flag descriptor_table_cusf_2fcrypto_2fv1_2fcrypto_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_cusf_2fcrypto_2fv1_2fcrypto_2eproto = {
    false,
    false,
    1663,
    descriptor_table_protodef_cusf_2fcrypto_2fv1_2fcrypto_2eproto,
    "cusf/crypto/v1/crypto.proto",
    &descriptor_table_cusf_2fcrypto_2fv1_2fcrypto_2eproto_once,
    descriptor_table_cusf_2fcrypto_2fv1_2fcrypto_2eproto_deps,
    1,
    10,
    schemas,
    file_default_instances,
    TableStruct_cusf_2fcrypto_2fv1_2fcrypto_2eproto::offsets,
    file_level_enum_descriptors_cusf_2fcrypto_2fv1_2fcrypto_2eproto,
    file_level_service_descriptors_cusf_2fcrypto_2fv1_2fcrypto_2eproto,
};
namespace cusf {
namespace crypto {
namespace v1 {
// ===================================================================

class HmacSha512Request::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HmacSha512Request>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HmacSha512Request, _impl_._has_bits_);
};

void HmacSha512Request::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.key_ != nullptr) _impl_.key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void HmacSha512Request::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.msg_ != nullptr) _impl_.msg_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
HmacSha512Request::HmacSha512Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HmacSha512Request_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cusf.crypto.v1.HmacSha512Request)
}
PROTOBUF_NDEBUG_INLINE HmacSha512Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::cusf::crypto::v1::HmacSha512Request& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

HmacSha512Request::HmacSha512Request(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const HmacSha512Request& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HmacSha512Request_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HmacSha512Request* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.key_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.key_)
                : nullptr;
  _impl_.msg_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.msg_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:cusf.crypto.v1.HmacSha512Request)
}
PROTOBUF_NDEBUG_INLINE HmacSha512Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void HmacSha512Request::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, key_),
           0,
           offsetof(Impl_, msg_) -
               offsetof(Impl_, key_) +
               sizeof(Impl_::msg_));
}
HmacSha512Request::~HmacSha512Request() {
  // @@protoc_insertion_point(destructor:cusf.crypto.v1.HmacSha512Request)
  SharedDtor(*this);
}
inline void HmacSha512Request::SharedDtor(MessageLite& self) {
  HmacSha512Request& this_ = static_cast<HmacSha512Request&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.key_;
  delete this_._impl_.msg_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL HmacSha512Request::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HmacSha512Request(arena);
}
constexpr auto HmacSha512Request::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HmacSha512Request),
                                            alignof(HmacSha512Request));
}
constexpr auto HmacSha512Request::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HmacSha512Request_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HmacSha512Request::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HmacSha512Request>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HmacSha512Request::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<HmacSha512Request>(), &HmacSha512Request::ByteSizeLong,
              &HmacSha512Request::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HmacSha512Request, _impl_._cached_size_),
          false,
      },
      &HmacSha512Request::kDescriptorMethods,
      &descriptor_table_cusf_2fcrypto_2fv1_2fcrypto_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        HmacSha512Request_class_data_ =
            HmacSha512Request::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL HmacSha512Request::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HmacSha512Request_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HmacSha512Request_class_data_.tc_table);
  return HmacSha512Request_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
HmacSha512Request::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HmacSha512Request, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    HmacSha512Request_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cusf::crypto::v1::HmacSha512Request>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cusf.common.v1.Hex msg = 2 [json_name = "msg"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(HmacSha512Request, _impl_.msg_)}},
    // .cusf.common.v1.Hex key = 1 [json_name = "key"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HmacSha512Request, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cusf.common.v1.Hex key = 1 [json_name = "key"];
    {PROTOBUF_FIELD_OFFSET(HmacSha512Request, _impl_.key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cusf.common.v1.Hex msg = 2 [json_name = "msg"];
    {PROTOBUF_FIELD_OFFSET(HmacSha512Request, _impl_.msg_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::cusf::common::v1::Hex>()},
      {::_pbi::TcParser::GetTable<::cusf::common::v1::Hex>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void HmacSha512Request::Clear() {
// @@protoc_insertion_point(message_clear_start:cusf.crypto.v1.HmacSha512Request)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.key_ != nullptr);
      _impl_.key_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.msg_ != nullptr);
      _impl_.msg_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL HmacSha512Request::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const HmacSha512Request& this_ = static_cast<const HmacSha512Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL HmacSha512Request::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const HmacSha512Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:cusf.crypto.v1.HmacSha512Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .cusf.common.v1.Hex key = 1 [json_name = "key"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.key_, this_._impl_.key_->GetCachedSize(), target,
        stream);
  }

  // .cusf.common.v1.Hex msg = 2 [json_name = "msg"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.msg_, this_._impl_.msg_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cusf.crypto.v1.HmacSha512Request)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t HmacSha512Request::ByteSizeLong(const MessageLite& base) {
  const HmacSha512Request& this_ = static_cast<const HmacSha512Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t HmacSha512Request::ByteSizeLong() const {
  const HmacSha512Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:cusf.crypto.v1.HmacSha512Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .cusf.common.v1.Hex key = 1 [json_name = "key"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.key_);
    }
    // .cusf.common.v1.Hex msg = 2 [json_name = "msg"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.msg_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void HmacSha512Request::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HmacSha512Request*>(&to_msg);
  auto& from = static_cast<const HmacSha512Request&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cusf.crypto.v1.HmacSha512Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.key_ != nullptr);
      if (_this->_impl_.key_ == nullptr) {
        _this->_impl_.key_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.key_);
      } else {
        _this->_impl_.key_->MergeFrom(*from._impl_.key_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.msg_ != nullptr);
      if (_this->_impl_.msg_ == nullptr) {
        _this->_impl_.msg_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.msg_);
      } else {
        _this->_impl_.msg_->MergeFrom(*from._impl_.msg_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HmacSha512Request::CopyFrom(const HmacSha512Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cusf.crypto.v1.HmacSha512Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HmacSha512Request::InternalSwap(HmacSha512Request* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HmacSha512Request, _impl_.msg_)
      + sizeof(HmacSha512Request::_impl_.msg_)
      - PROTOBUF_FIELD_OFFSET(HmacSha512Request, _impl_.key_)>(
          reinterpret_cast<char*>(&_impl_.key_),
          reinterpret_cast<char*>(&other->_impl_.key_));
}

::google::protobuf::Metadata HmacSha512Request::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HmacSha512Response::_Internal {
 public:
  using HasBits =
      decltype(std::declval<HmacSha512Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HmacSha512Response, _impl_._has_bits_);
};

void HmacSha512Response::clear_hmac() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.hmac_ != nullptr) _impl_.hmac_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
HmacSha512Response::HmacSha512Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HmacSha512Response_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cusf.crypto.v1.HmacSha512Response)
}
PROTOBUF_NDEBUG_INLINE HmacSha512Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::cusf::crypto::v1::HmacSha512Response& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

HmacSha512Response::HmacSha512Response(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const HmacSha512Response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HmacSha512Response_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HmacSha512Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.hmac_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.hmac_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:cusf.crypto.v1.HmacSha512Response)
}
PROTOBUF_NDEBUG_INLINE HmacSha512Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void HmacSha512Response::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.hmac_ = {};
}
HmacSha512Response::~HmacSha512Response() {
  // @@protoc_insertion_point(destructor:cusf.crypto.v1.HmacSha512Response)
  SharedDtor(*this);
}
inline void HmacSha512Response::SharedDtor(MessageLite& self) {
  HmacSha512Response& this_ = static_cast<HmacSha512Response&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.hmac_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL HmacSha512Response::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HmacSha512Response(arena);
}
constexpr auto HmacSha512Response::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HmacSha512Response),
                                            alignof(HmacSha512Response));
}
constexpr auto HmacSha512Response::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HmacSha512Response_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HmacSha512Response::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HmacSha512Response>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HmacSha512Response::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<HmacSha512Response>(), &HmacSha512Response::ByteSizeLong,
              &HmacSha512Response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HmacSha512Response, _impl_._cached_size_),
          false,
      },
      &HmacSha512Response::kDescriptorMethods,
      &descriptor_table_cusf_2fcrypto_2fv1_2fcrypto_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        HmacSha512Response_class_data_ =
            HmacSha512Response::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL HmacSha512Response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HmacSha512Response_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HmacSha512Response_class_data_.tc_table);
  return HmacSha512Response_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
HmacSha512Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HmacSha512Response, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    HmacSha512Response_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cusf::crypto::v1::HmacSha512Response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cusf.common.v1.Hex hmac = 1 [json_name = "hmac"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HmacSha512Response, _impl_.hmac_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cusf.common.v1.Hex hmac = 1 [json_name = "hmac"];
    {PROTOBUF_FIELD_OFFSET(HmacSha512Response, _impl_.hmac_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::cusf::common::v1::Hex>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void HmacSha512Response::Clear() {
// @@protoc_insertion_point(message_clear_start:cusf.crypto.v1.HmacSha512Response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.hmac_ != nullptr);
    _impl_.hmac_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL HmacSha512Response::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const HmacSha512Response& this_ = static_cast<const HmacSha512Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL HmacSha512Response::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const HmacSha512Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:cusf.crypto.v1.HmacSha512Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .cusf.common.v1.Hex hmac = 1 [json_name = "hmac"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.hmac_, this_._impl_.hmac_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cusf.crypto.v1.HmacSha512Response)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t HmacSha512Response::ByteSizeLong(const MessageLite& base) {
  const HmacSha512Response& this_ = static_cast<const HmacSha512Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t HmacSha512Response::ByteSizeLong() const {
  const HmacSha512Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:cusf.crypto.v1.HmacSha512Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .cusf.common.v1.Hex hmac = 1 [json_name = "hmac"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.hmac_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void HmacSha512Response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HmacSha512Response*>(&to_msg);
  auto& from = static_cast<const HmacSha512Response&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cusf.crypto.v1.HmacSha512Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.hmac_ != nullptr);
    if (_this->_impl_.hmac_ == nullptr) {
      _this->_impl_.hmac_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.hmac_);
    } else {
      _this->_impl_.hmac_->MergeFrom(*from._impl_.hmac_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HmacSha512Response::CopyFrom(const HmacSha512Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cusf.crypto.v1.HmacSha512Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HmacSha512Response::InternalSwap(HmacSha512Response* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.hmac_, other->_impl_.hmac_);
}

::google::protobuf::Metadata HmacSha512Response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Ripemd160Request::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Ripemd160Request>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Ripemd160Request, _impl_._has_bits_);
};

void Ripemd160Request::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.msg_ != nullptr) _impl_.msg_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Ripemd160Request::Ripemd160Request(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Ripemd160Request_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cusf.crypto.v1.Ripemd160Request)
}
PROTOBUF_NDEBUG_INLINE Ripemd160Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::cusf::crypto::v1::Ripemd160Request& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Ripemd160Request::Ripemd160Request(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Ripemd160Request& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Ripemd160Request_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Ripemd160Request* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.msg_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.msg_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:cusf.crypto.v1.Ripemd160Request)
}
PROTOBUF_NDEBUG_INLINE Ripemd160Request::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Ripemd160Request::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.msg_ = {};
}
Ripemd160Request::~Ripemd160Request() {
  // @@protoc_insertion_point(destructor:cusf.crypto.v1.Ripemd160Request)
  SharedDtor(*this);
}
inline void Ripemd160Request::SharedDtor(MessageLite& self) {
  Ripemd160Request& this_ = static_cast<Ripemd160Request&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.msg_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Ripemd160Request::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Ripemd160Request(arena);
}
constexpr auto Ripemd160Request::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Ripemd160Request),
                                            alignof(Ripemd160Request));
}
constexpr auto Ripemd160Request::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Ripemd160Request_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Ripemd160Request::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Ripemd160Request>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Ripemd160Request::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Ripemd160Request>(), &Ripemd160Request::ByteSizeLong,
              &Ripemd160Request::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Ripemd160Request, _impl_._cached_size_),
          false,
      },
      &Ripemd160Request::kDescriptorMethods,
      &descriptor_table_cusf_2fcrypto_2fv1_2fcrypto_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        Ripemd160Request_class_data_ =
            Ripemd160Request::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL Ripemd160Request::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Ripemd160Request_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Ripemd160Request_class_data_.tc_table);
  return Ripemd160Request_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
Ripemd160Request::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Ripemd160Request, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Ripemd160Request_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cusf::crypto::v1::Ripemd160Request>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cusf.common.v1.Hex msg = 1 [json_name = "msg"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Ripemd160Request, _impl_.msg_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cusf.common.v1.Hex msg = 1 [json_name = "msg"];
    {PROTOBUF_FIELD_OFFSET(Ripemd160Request, _impl_.msg_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::cusf::common::v1::Hex>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Ripemd160Request::Clear() {
// @@protoc_insertion_point(message_clear_start:cusf.crypto.v1.Ripemd160Request)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.msg_ != nullptr);
    _impl_.msg_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Ripemd160Request::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Ripemd160Request& this_ = static_cast<const Ripemd160Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Ripemd160Request::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Ripemd160Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:cusf.crypto.v1.Ripemd160Request)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .cusf.common.v1.Hex msg = 1 [json_name = "msg"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.msg_, this_._impl_.msg_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cusf.crypto.v1.Ripemd160Request)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Ripemd160Request::ByteSizeLong(const MessageLite& base) {
  const Ripemd160Request& this_ = static_cast<const Ripemd160Request&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Ripemd160Request::ByteSizeLong() const {
  const Ripemd160Request& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:cusf.crypto.v1.Ripemd160Request)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .cusf.common.v1.Hex msg = 1 [json_name = "msg"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.msg_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Ripemd160Request::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Ripemd160Request*>(&to_msg);
  auto& from = static_cast<const Ripemd160Request&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cusf.crypto.v1.Ripemd160Request)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.msg_ != nullptr);
    if (_this->_impl_.msg_ == nullptr) {
      _this->_impl_.msg_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.msg_);
    } else {
      _this->_impl_.msg_->MergeFrom(*from._impl_.msg_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Ripemd160Request::CopyFrom(const Ripemd160Request& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cusf.crypto.v1.Ripemd160Request)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Ripemd160Request::InternalSwap(Ripemd160Request* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.msg_, other->_impl_.msg_);
}

::google::protobuf::Metadata Ripemd160Request::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Ripemd160Response::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Ripemd160Response>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Ripemd160Response, _impl_._has_bits_);
};

void Ripemd160Response::clear_digest() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.digest_ != nullptr) _impl_.digest_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Ripemd160Response::Ripemd160Response(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Ripemd160Response_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cusf.crypto.v1.Ripemd160Response)
}
PROTOBUF_NDEBUG_INLINE Ripemd160Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::cusf::crypto::v1::Ripemd160Response& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Ripemd160Response::Ripemd160Response(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Ripemd160Response& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Ripemd160Response_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Ripemd160Response* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.digest_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.digest_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:cusf.crypto.v1.Ripemd160Response)
}
PROTOBUF_NDEBUG_INLINE Ripemd160Response::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Ripemd160Response::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.digest_ = {};
}
Ripemd160Response::~Ripemd160Response() {
  // @@protoc_insertion_point(destructor:cusf.crypto.v1.Ripemd160Response)
  SharedDtor(*this);
}
inline void Ripemd160Response::SharedDtor(MessageLite& self) {
  Ripemd160Response& this_ = static_cast<Ripemd160Response&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.digest_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Ripemd160Response::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Ripemd160Response(arena);
}
constexpr auto Ripemd160Response::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Ripemd160Response),
                                            alignof(Ripemd160Response));
}
constexpr auto Ripemd160Response::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Ripemd160Response_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Ripemd160Response::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Ripemd160Response>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Ripemd160Response::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Ripemd160Response>(), &Ripemd160Response::ByteSizeLong,
              &Ripemd160Response::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Ripemd160Response, _impl_._cached_size_),
          false,
      },
      &Ripemd160Response::kDescriptorMethods,
      &descriptor_table_cusf_2fcrypto_2fv1_2fcrypto_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        Ripemd160Response_class_data_ =
            Ripemd160Response::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL Ripemd160Response::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Ripemd160Response_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Ripemd160Response_class_data_.tc_table);
  return Ripemd160Response_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
Ripemd160Response::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Ripemd160Response, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Ripemd160Response_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cusf::crypto::v1::Ripemd160Response>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cusf.common.v1.Hex digest = 1 [json_name = "digest"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Ripemd160Response, _impl_.digest_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cusf.common.v1.Hex digest = 1 [json_name = "digest"];
    {PROTOBUF_FIELD_OFFSET(Ripemd160Response, _impl_.digest_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::cusf::common::v1::Hex>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Ripemd160Response::Clear() {
// @@protoc_insertion_point(message_clear_start:cusf.crypto.v1.Ripemd160Response)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.digest_ != nullptr);
    _impl_.digest_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Ripemd160Response::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Ripemd160Response& this_ = static_cast<const Ripemd160Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Ripemd160Response::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Ripemd160Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:cusf.crypto.v1.Ripemd160Response)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .cusf.common.v1.Hex digest = 1 [json_name = "digest"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.digest_, this_._impl_.digest_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cusf.crypto.v1.Ripemd160Response)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Ripemd160Response::ByteSizeLong(const MessageLite& base) {
  const Ripemd160Response& this_ = static_cast<const Ripemd160Response&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Ripemd160Response::ByteSizeLong() const {
  const Ripemd160Response& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:cusf.crypto.v1.Ripemd160Response)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .cusf.common.v1.Hex digest = 1 [json_name = "digest"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.digest_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Ripemd160Response::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Ripemd160Response*>(&to_msg);
  auto& from = static_cast<const Ripemd160Response&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cusf.crypto.v1.Ripemd160Response)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.digest_ != nullptr);
    if (_this->_impl_.digest_ == nullptr) {
      _this->_impl_.digest_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.digest_);
    } else {
      _this->_impl_.digest_->MergeFrom(*from._impl_.digest_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Ripemd160Response::CopyFrom(const Ripemd160Response& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cusf.crypto.v1.Ripemd160Response)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Ripemd160Response::InternalSwap(Ripemd160Response* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.digest_, other->_impl_.digest_);
}

::google::protobuf::Metadata Ripemd160Response::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Secp256k1SecretKeyToPublicKeyRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Secp256k1SecretKeyToPublicKeyRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Secp256k1SecretKeyToPublicKeyRequest, _impl_._has_bits_);
};

void Secp256k1SecretKeyToPublicKeyRequest::clear_secret_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.secret_key_ != nullptr) _impl_.secret_key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Secp256k1SecretKeyToPublicKeyRequest::Secp256k1SecretKeyToPublicKeyRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Secp256k1SecretKeyToPublicKeyRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cusf.crypto.v1.Secp256k1SecretKeyToPublicKeyRequest)
}
PROTOBUF_NDEBUG_INLINE Secp256k1SecretKeyToPublicKeyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::cusf::crypto::v1::Secp256k1SecretKeyToPublicKeyRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Secp256k1SecretKeyToPublicKeyRequest::Secp256k1SecretKeyToPublicKeyRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Secp256k1SecretKeyToPublicKeyRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Secp256k1SecretKeyToPublicKeyRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Secp256k1SecretKeyToPublicKeyRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.secret_key_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.secret_key_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:cusf.crypto.v1.Secp256k1SecretKeyToPublicKeyRequest)
}
PROTOBUF_NDEBUG_INLINE Secp256k1SecretKeyToPublicKeyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Secp256k1SecretKeyToPublicKeyRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.secret_key_ = {};
}
Secp256k1SecretKeyToPublicKeyRequest::~Secp256k1SecretKeyToPublicKeyRequest() {
  // @@protoc_insertion_point(destructor:cusf.crypto.v1.Secp256k1SecretKeyToPublicKeyRequest)
  SharedDtor(*this);
}
inline void Secp256k1SecretKeyToPublicKeyRequest::SharedDtor(MessageLite& self) {
  Secp256k1SecretKeyToPublicKeyRequest& this_ = static_cast<Secp256k1SecretKeyToPublicKeyRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.secret_key_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Secp256k1SecretKeyToPublicKeyRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Secp256k1SecretKeyToPublicKeyRequest(arena);
}
constexpr auto Secp256k1SecretKeyToPublicKeyRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Secp256k1SecretKeyToPublicKeyRequest),
                                            alignof(Secp256k1SecretKeyToPublicKeyRequest));
}
constexpr auto Secp256k1SecretKeyToPublicKeyRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Secp256k1SecretKeyToPublicKeyRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Secp256k1SecretKeyToPublicKeyRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Secp256k1SecretKeyToPublicKeyRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Secp256k1SecretKeyToPublicKeyRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Secp256k1SecretKeyToPublicKeyRequest>(), &Secp256k1SecretKeyToPublicKeyRequest::ByteSizeLong,
              &Secp256k1SecretKeyToPublicKeyRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Secp256k1SecretKeyToPublicKeyRequest, _impl_._cached_size_),
          false,
      },
      &Secp256k1SecretKeyToPublicKeyRequest::kDescriptorMethods,
      &descriptor_table_cusf_2fcrypto_2fv1_2fcrypto_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        Secp256k1SecretKeyToPublicKeyRequest_class_data_ =
            Secp256k1SecretKeyToPublicKeyRequest::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL Secp256k1SecretKeyToPublicKeyRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Secp256k1SecretKeyToPublicKeyRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Secp256k1SecretKeyToPublicKeyRequest_class_data_.tc_table);
  return Secp256k1SecretKeyToPublicKeyRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
Secp256k1SecretKeyToPublicKeyRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Secp256k1SecretKeyToPublicKeyRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Secp256k1SecretKeyToPublicKeyRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cusf::crypto::v1::Secp256k1SecretKeyToPublicKeyRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cusf.common.v1.ConsensusHex secret_key = 1 [json_name = "secretKey"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Secp256k1SecretKeyToPublicKeyRequest, _impl_.secret_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cusf.common.v1.ConsensusHex secret_key = 1 [json_name = "secretKey"];
    {PROTOBUF_FIELD_OFFSET(Secp256k1SecretKeyToPublicKeyRequest, _impl_.secret_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::cusf::common::v1::ConsensusHex>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Secp256k1SecretKeyToPublicKeyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cusf.crypto.v1.Secp256k1SecretKeyToPublicKeyRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.secret_key_ != nullptr);
    _impl_.secret_key_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Secp256k1SecretKeyToPublicKeyRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Secp256k1SecretKeyToPublicKeyRequest& this_ = static_cast<const Secp256k1SecretKeyToPublicKeyRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Secp256k1SecretKeyToPublicKeyRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Secp256k1SecretKeyToPublicKeyRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:cusf.crypto.v1.Secp256k1SecretKeyToPublicKeyRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .cusf.common.v1.ConsensusHex secret_key = 1 [json_name = "secretKey"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.secret_key_, this_._impl_.secret_key_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cusf.crypto.v1.Secp256k1SecretKeyToPublicKeyRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Secp256k1SecretKeyToPublicKeyRequest::ByteSizeLong(const MessageLite& base) {
  const Secp256k1SecretKeyToPublicKeyRequest& this_ = static_cast<const Secp256k1SecretKeyToPublicKeyRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Secp256k1SecretKeyToPublicKeyRequest::ByteSizeLong() const {
  const Secp256k1SecretKeyToPublicKeyRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:cusf.crypto.v1.Secp256k1SecretKeyToPublicKeyRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .cusf.common.v1.ConsensusHex secret_key = 1 [json_name = "secretKey"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.secret_key_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Secp256k1SecretKeyToPublicKeyRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Secp256k1SecretKeyToPublicKeyRequest*>(&to_msg);
  auto& from = static_cast<const Secp256k1SecretKeyToPublicKeyRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cusf.crypto.v1.Secp256k1SecretKeyToPublicKeyRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.secret_key_ != nullptr);
    if (_this->_impl_.secret_key_ == nullptr) {
      _this->_impl_.secret_key_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.secret_key_);
    } else {
      _this->_impl_.secret_key_->MergeFrom(*from._impl_.secret_key_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Secp256k1SecretKeyToPublicKeyRequest::CopyFrom(const Secp256k1SecretKeyToPublicKeyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cusf.crypto.v1.Secp256k1SecretKeyToPublicKeyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Secp256k1SecretKeyToPublicKeyRequest::InternalSwap(Secp256k1SecretKeyToPublicKeyRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.secret_key_, other->_impl_.secret_key_);
}

::google::protobuf::Metadata Secp256k1SecretKeyToPublicKeyRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Secp256k1SecretKeyToPublicKeyResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Secp256k1SecretKeyToPublicKeyResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Secp256k1SecretKeyToPublicKeyResponse, _impl_._has_bits_);
};

void Secp256k1SecretKeyToPublicKeyResponse::clear_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.public_key_ != nullptr) _impl_.public_key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Secp256k1SecretKeyToPublicKeyResponse::Secp256k1SecretKeyToPublicKeyResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Secp256k1SecretKeyToPublicKeyResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cusf.crypto.v1.Secp256k1SecretKeyToPublicKeyResponse)
}
PROTOBUF_NDEBUG_INLINE Secp256k1SecretKeyToPublicKeyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::cusf::crypto::v1::Secp256k1SecretKeyToPublicKeyResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Secp256k1SecretKeyToPublicKeyResponse::Secp256k1SecretKeyToPublicKeyResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Secp256k1SecretKeyToPublicKeyResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Secp256k1SecretKeyToPublicKeyResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Secp256k1SecretKeyToPublicKeyResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.public_key_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.public_key_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:cusf.crypto.v1.Secp256k1SecretKeyToPublicKeyResponse)
}
PROTOBUF_NDEBUG_INLINE Secp256k1SecretKeyToPublicKeyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Secp256k1SecretKeyToPublicKeyResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.public_key_ = {};
}
Secp256k1SecretKeyToPublicKeyResponse::~Secp256k1SecretKeyToPublicKeyResponse() {
  // @@protoc_insertion_point(destructor:cusf.crypto.v1.Secp256k1SecretKeyToPublicKeyResponse)
  SharedDtor(*this);
}
inline void Secp256k1SecretKeyToPublicKeyResponse::SharedDtor(MessageLite& self) {
  Secp256k1SecretKeyToPublicKeyResponse& this_ = static_cast<Secp256k1SecretKeyToPublicKeyResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.public_key_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Secp256k1SecretKeyToPublicKeyResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Secp256k1SecretKeyToPublicKeyResponse(arena);
}
constexpr auto Secp256k1SecretKeyToPublicKeyResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Secp256k1SecretKeyToPublicKeyResponse),
                                            alignof(Secp256k1SecretKeyToPublicKeyResponse));
}
constexpr auto Secp256k1SecretKeyToPublicKeyResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Secp256k1SecretKeyToPublicKeyResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Secp256k1SecretKeyToPublicKeyResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Secp256k1SecretKeyToPublicKeyResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Secp256k1SecretKeyToPublicKeyResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Secp256k1SecretKeyToPublicKeyResponse>(), &Secp256k1SecretKeyToPublicKeyResponse::ByteSizeLong,
              &Secp256k1SecretKeyToPublicKeyResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Secp256k1SecretKeyToPublicKeyResponse, _impl_._cached_size_),
          false,
      },
      &Secp256k1SecretKeyToPublicKeyResponse::kDescriptorMethods,
      &descriptor_table_cusf_2fcrypto_2fv1_2fcrypto_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        Secp256k1SecretKeyToPublicKeyResponse_class_data_ =
            Secp256k1SecretKeyToPublicKeyResponse::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL Secp256k1SecretKeyToPublicKeyResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Secp256k1SecretKeyToPublicKeyResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Secp256k1SecretKeyToPublicKeyResponse_class_data_.tc_table);
  return Secp256k1SecretKeyToPublicKeyResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
Secp256k1SecretKeyToPublicKeyResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Secp256k1SecretKeyToPublicKeyResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Secp256k1SecretKeyToPublicKeyResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cusf::crypto::v1::Secp256k1SecretKeyToPublicKeyResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cusf.common.v1.ConsensusHex public_key = 1 [json_name = "publicKey"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Secp256k1SecretKeyToPublicKeyResponse, _impl_.public_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cusf.common.v1.ConsensusHex public_key = 1 [json_name = "publicKey"];
    {PROTOBUF_FIELD_OFFSET(Secp256k1SecretKeyToPublicKeyResponse, _impl_.public_key_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::cusf::common::v1::ConsensusHex>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Secp256k1SecretKeyToPublicKeyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cusf.crypto.v1.Secp256k1SecretKeyToPublicKeyResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.public_key_ != nullptr);
    _impl_.public_key_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Secp256k1SecretKeyToPublicKeyResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Secp256k1SecretKeyToPublicKeyResponse& this_ = static_cast<const Secp256k1SecretKeyToPublicKeyResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Secp256k1SecretKeyToPublicKeyResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Secp256k1SecretKeyToPublicKeyResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:cusf.crypto.v1.Secp256k1SecretKeyToPublicKeyResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .cusf.common.v1.ConsensusHex public_key = 1 [json_name = "publicKey"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.public_key_, this_._impl_.public_key_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cusf.crypto.v1.Secp256k1SecretKeyToPublicKeyResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Secp256k1SecretKeyToPublicKeyResponse::ByteSizeLong(const MessageLite& base) {
  const Secp256k1SecretKeyToPublicKeyResponse& this_ = static_cast<const Secp256k1SecretKeyToPublicKeyResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Secp256k1SecretKeyToPublicKeyResponse::ByteSizeLong() const {
  const Secp256k1SecretKeyToPublicKeyResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:cusf.crypto.v1.Secp256k1SecretKeyToPublicKeyResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .cusf.common.v1.ConsensusHex public_key = 1 [json_name = "publicKey"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.public_key_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Secp256k1SecretKeyToPublicKeyResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Secp256k1SecretKeyToPublicKeyResponse*>(&to_msg);
  auto& from = static_cast<const Secp256k1SecretKeyToPublicKeyResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cusf.crypto.v1.Secp256k1SecretKeyToPublicKeyResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.public_key_ != nullptr);
    if (_this->_impl_.public_key_ == nullptr) {
      _this->_impl_.public_key_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.public_key_);
    } else {
      _this->_impl_.public_key_->MergeFrom(*from._impl_.public_key_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Secp256k1SecretKeyToPublicKeyResponse::CopyFrom(const Secp256k1SecretKeyToPublicKeyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cusf.crypto.v1.Secp256k1SecretKeyToPublicKeyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Secp256k1SecretKeyToPublicKeyResponse::InternalSwap(Secp256k1SecretKeyToPublicKeyResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.public_key_, other->_impl_.public_key_);
}

::google::protobuf::Metadata Secp256k1SecretKeyToPublicKeyResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Secp256k1SignRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Secp256k1SignRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Secp256k1SignRequest, _impl_._has_bits_);
};

void Secp256k1SignRequest::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_ != nullptr) _impl_.message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Secp256k1SignRequest::clear_secret_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.secret_key_ != nullptr) _impl_.secret_key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
Secp256k1SignRequest::Secp256k1SignRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Secp256k1SignRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cusf.crypto.v1.Secp256k1SignRequest)
}
PROTOBUF_NDEBUG_INLINE Secp256k1SignRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::cusf::crypto::v1::Secp256k1SignRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Secp256k1SignRequest::Secp256k1SignRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Secp256k1SignRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Secp256k1SignRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Secp256k1SignRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.message_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_)
                : nullptr;
  _impl_.secret_key_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.secret_key_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:cusf.crypto.v1.Secp256k1SignRequest)
}
PROTOBUF_NDEBUG_INLINE Secp256k1SignRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Secp256k1SignRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, message_),
           0,
           offsetof(Impl_, secret_key_) -
               offsetof(Impl_, message_) +
               sizeof(Impl_::secret_key_));
}
Secp256k1SignRequest::~Secp256k1SignRequest() {
  // @@protoc_insertion_point(destructor:cusf.crypto.v1.Secp256k1SignRequest)
  SharedDtor(*this);
}
inline void Secp256k1SignRequest::SharedDtor(MessageLite& self) {
  Secp256k1SignRequest& this_ = static_cast<Secp256k1SignRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.message_;
  delete this_._impl_.secret_key_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Secp256k1SignRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Secp256k1SignRequest(arena);
}
constexpr auto Secp256k1SignRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Secp256k1SignRequest),
                                            alignof(Secp256k1SignRequest));
}
constexpr auto Secp256k1SignRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Secp256k1SignRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Secp256k1SignRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Secp256k1SignRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Secp256k1SignRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Secp256k1SignRequest>(), &Secp256k1SignRequest::ByteSizeLong,
              &Secp256k1SignRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Secp256k1SignRequest, _impl_._cached_size_),
          false,
      },
      &Secp256k1SignRequest::kDescriptorMethods,
      &descriptor_table_cusf_2fcrypto_2fv1_2fcrypto_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        Secp256k1SignRequest_class_data_ =
            Secp256k1SignRequest::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL Secp256k1SignRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Secp256k1SignRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Secp256k1SignRequest_class_data_.tc_table);
  return Secp256k1SignRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2>
Secp256k1SignRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Secp256k1SignRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Secp256k1SignRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cusf::crypto::v1::Secp256k1SignRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cusf.common.v1.ConsensusHex secret_key = 2 [json_name = "secretKey"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Secp256k1SignRequest, _impl_.secret_key_)}},
    // .cusf.common.v1.Hex message = 1 [json_name = "message"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Secp256k1SignRequest, _impl_.message_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cusf.common.v1.Hex message = 1 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(Secp256k1SignRequest, _impl_.message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cusf.common.v1.ConsensusHex secret_key = 2 [json_name = "secretKey"];
    {PROTOBUF_FIELD_OFFSET(Secp256k1SignRequest, _impl_.secret_key_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::cusf::common::v1::Hex>()},
      {::_pbi::TcParser::GetTable<::cusf::common::v1::ConsensusHex>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Secp256k1SignRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cusf.crypto.v1.Secp256k1SignRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.message_ != nullptr);
      _impl_.message_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.secret_key_ != nullptr);
      _impl_.secret_key_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Secp256k1SignRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Secp256k1SignRequest& this_ = static_cast<const Secp256k1SignRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Secp256k1SignRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Secp256k1SignRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:cusf.crypto.v1.Secp256k1SignRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .cusf.common.v1.Hex message = 1 [json_name = "message"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.message_, this_._impl_.message_->GetCachedSize(), target,
        stream);
  }

  // .cusf.common.v1.ConsensusHex secret_key = 2 [json_name = "secretKey"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.secret_key_, this_._impl_.secret_key_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cusf.crypto.v1.Secp256k1SignRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Secp256k1SignRequest::ByteSizeLong(const MessageLite& base) {
  const Secp256k1SignRequest& this_ = static_cast<const Secp256k1SignRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Secp256k1SignRequest::ByteSizeLong() const {
  const Secp256k1SignRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:cusf.crypto.v1.Secp256k1SignRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    // .cusf.common.v1.Hex message = 1 [json_name = "message"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_);
    }
    // .cusf.common.v1.ConsensusHex secret_key = 2 [json_name = "secretKey"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.secret_key_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Secp256k1SignRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Secp256k1SignRequest*>(&to_msg);
  auto& from = static_cast<const Secp256k1SignRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cusf.crypto.v1.Secp256k1SignRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.message_ != nullptr);
      if (_this->_impl_.message_ == nullptr) {
        _this->_impl_.message_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_);
      } else {
        _this->_impl_.message_->MergeFrom(*from._impl_.message_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.secret_key_ != nullptr);
      if (_this->_impl_.secret_key_ == nullptr) {
        _this->_impl_.secret_key_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.secret_key_);
      } else {
        _this->_impl_.secret_key_->MergeFrom(*from._impl_.secret_key_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Secp256k1SignRequest::CopyFrom(const Secp256k1SignRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cusf.crypto.v1.Secp256k1SignRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Secp256k1SignRequest::InternalSwap(Secp256k1SignRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Secp256k1SignRequest, _impl_.secret_key_)
      + sizeof(Secp256k1SignRequest::_impl_.secret_key_)
      - PROTOBUF_FIELD_OFFSET(Secp256k1SignRequest, _impl_.message_)>(
          reinterpret_cast<char*>(&_impl_.message_),
          reinterpret_cast<char*>(&other->_impl_.message_));
}

::google::protobuf::Metadata Secp256k1SignRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Secp256k1SignResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Secp256k1SignResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Secp256k1SignResponse, _impl_._has_bits_);
};

void Secp256k1SignResponse::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.signature_ != nullptr) _impl_.signature_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
Secp256k1SignResponse::Secp256k1SignResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Secp256k1SignResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cusf.crypto.v1.Secp256k1SignResponse)
}
PROTOBUF_NDEBUG_INLINE Secp256k1SignResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::cusf::crypto::v1::Secp256k1SignResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Secp256k1SignResponse::Secp256k1SignResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Secp256k1SignResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Secp256k1SignResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Secp256k1SignResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.signature_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.signature_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:cusf.crypto.v1.Secp256k1SignResponse)
}
PROTOBUF_NDEBUG_INLINE Secp256k1SignResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Secp256k1SignResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.signature_ = {};
}
Secp256k1SignResponse::~Secp256k1SignResponse() {
  // @@protoc_insertion_point(destructor:cusf.crypto.v1.Secp256k1SignResponse)
  SharedDtor(*this);
}
inline void Secp256k1SignResponse::SharedDtor(MessageLite& self) {
  Secp256k1SignResponse& this_ = static_cast<Secp256k1SignResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.signature_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Secp256k1SignResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Secp256k1SignResponse(arena);
}
constexpr auto Secp256k1SignResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Secp256k1SignResponse),
                                            alignof(Secp256k1SignResponse));
}
constexpr auto Secp256k1SignResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Secp256k1SignResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Secp256k1SignResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Secp256k1SignResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Secp256k1SignResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Secp256k1SignResponse>(), &Secp256k1SignResponse::ByteSizeLong,
              &Secp256k1SignResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Secp256k1SignResponse, _impl_._cached_size_),
          false,
      },
      &Secp256k1SignResponse::kDescriptorMethods,
      &descriptor_table_cusf_2fcrypto_2fv1_2fcrypto_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        Secp256k1SignResponse_class_data_ =
            Secp256k1SignResponse::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL Secp256k1SignResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Secp256k1SignResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Secp256k1SignResponse_class_data_.tc_table);
  return Secp256k1SignResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
Secp256k1SignResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Secp256k1SignResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Secp256k1SignResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cusf::crypto::v1::Secp256k1SignResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .cusf.common.v1.Hex signature = 1 [json_name = "signature"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Secp256k1SignResponse, _impl_.signature_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cusf.common.v1.Hex signature = 1 [json_name = "signature"];
    {PROTOBUF_FIELD_OFFSET(Secp256k1SignResponse, _impl_.signature_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::cusf::common::v1::Hex>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Secp256k1SignResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cusf.crypto.v1.Secp256k1SignResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(_impl_.signature_ != nullptr);
    _impl_.signature_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Secp256k1SignResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Secp256k1SignResponse& this_ = static_cast<const Secp256k1SignResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Secp256k1SignResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Secp256k1SignResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:cusf.crypto.v1.Secp256k1SignResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .cusf.common.v1.Hex signature = 1 [json_name = "signature"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.signature_, this_._impl_.signature_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cusf.crypto.v1.Secp256k1SignResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Secp256k1SignResponse::ByteSizeLong(const MessageLite& base) {
  const Secp256k1SignResponse& this_ = static_cast<const Secp256k1SignResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Secp256k1SignResponse::ByteSizeLong() const {
  const Secp256k1SignResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:cusf.crypto.v1.Secp256k1SignResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .cusf.common.v1.Hex signature = 1 [json_name = "signature"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.signature_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Secp256k1SignResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Secp256k1SignResponse*>(&to_msg);
  auto& from = static_cast<const Secp256k1SignResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cusf.crypto.v1.Secp256k1SignResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    ABSL_DCHECK(from._impl_.signature_ != nullptr);
    if (_this->_impl_.signature_ == nullptr) {
      _this->_impl_.signature_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.signature_);
    } else {
      _this->_impl_.signature_->MergeFrom(*from._impl_.signature_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Secp256k1SignResponse::CopyFrom(const Secp256k1SignResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cusf.crypto.v1.Secp256k1SignResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Secp256k1SignResponse::InternalSwap(Secp256k1SignResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.signature_, other->_impl_.signature_);
}

::google::protobuf::Metadata Secp256k1SignResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Secp256k1VerifyRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Secp256k1VerifyRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Secp256k1VerifyRequest, _impl_._has_bits_);
};

void Secp256k1VerifyRequest::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.message_ != nullptr) _impl_.message_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
void Secp256k1VerifyRequest::clear_signature() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.signature_ != nullptr) _impl_.signature_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
void Secp256k1VerifyRequest::clear_public_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.public_key_ != nullptr) _impl_.public_key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
Secp256k1VerifyRequest::Secp256k1VerifyRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Secp256k1VerifyRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cusf.crypto.v1.Secp256k1VerifyRequest)
}
PROTOBUF_NDEBUG_INLINE Secp256k1VerifyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    const ::cusf::crypto::v1::Secp256k1VerifyRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

Secp256k1VerifyRequest::Secp256k1VerifyRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Secp256k1VerifyRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Secp256k1VerifyRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Secp256k1VerifyRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.message_ = ((cached_has_bits & 0x00000001u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_)
                : nullptr;
  _impl_.signature_ = ((cached_has_bits & 0x00000002u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.signature_)
                : nullptr;
  _impl_.public_key_ = ((cached_has_bits & 0x00000004u) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.public_key_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:cusf.crypto.v1.Secp256k1VerifyRequest)
}
PROTOBUF_NDEBUG_INLINE Secp256k1VerifyRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Secp256k1VerifyRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, message_),
           0,
           offsetof(Impl_, public_key_) -
               offsetof(Impl_, message_) +
               sizeof(Impl_::public_key_));
}
Secp256k1VerifyRequest::~Secp256k1VerifyRequest() {
  // @@protoc_insertion_point(destructor:cusf.crypto.v1.Secp256k1VerifyRequest)
  SharedDtor(*this);
}
inline void Secp256k1VerifyRequest::SharedDtor(MessageLite& self) {
  Secp256k1VerifyRequest& this_ = static_cast<Secp256k1VerifyRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.message_;
  delete this_._impl_.signature_;
  delete this_._impl_.public_key_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Secp256k1VerifyRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Secp256k1VerifyRequest(arena);
}
constexpr auto Secp256k1VerifyRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Secp256k1VerifyRequest),
                                            alignof(Secp256k1VerifyRequest));
}
constexpr auto Secp256k1VerifyRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Secp256k1VerifyRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Secp256k1VerifyRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Secp256k1VerifyRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Secp256k1VerifyRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Secp256k1VerifyRequest>(), &Secp256k1VerifyRequest::ByteSizeLong,
              &Secp256k1VerifyRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Secp256k1VerifyRequest, _impl_._cached_size_),
          false,
      },
      &Secp256k1VerifyRequest::kDescriptorMethods,
      &descriptor_table_cusf_2fcrypto_2fv1_2fcrypto_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        Secp256k1VerifyRequest_class_data_ =
            Secp256k1VerifyRequest::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL Secp256k1VerifyRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Secp256k1VerifyRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Secp256k1VerifyRequest_class_data_.tc_table);
  return Secp256k1VerifyRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2>
Secp256k1VerifyRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Secp256k1VerifyRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    Secp256k1VerifyRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cusf::crypto::v1::Secp256k1VerifyRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .cusf.common.v1.Hex message = 1 [json_name = "message"];
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Secp256k1VerifyRequest, _impl_.message_)}},
    // .cusf.common.v1.Hex signature = 2 [json_name = "signature"];
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(Secp256k1VerifyRequest, _impl_.signature_)}},
    // .cusf.common.v1.ConsensusHex public_key = 3 [json_name = "publicKey"];
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(Secp256k1VerifyRequest, _impl_.public_key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .cusf.common.v1.Hex message = 1 [json_name = "message"];
    {PROTOBUF_FIELD_OFFSET(Secp256k1VerifyRequest, _impl_.message_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cusf.common.v1.Hex signature = 2 [json_name = "signature"];
    {PROTOBUF_FIELD_OFFSET(Secp256k1VerifyRequest, _impl_.signature_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .cusf.common.v1.ConsensusHex public_key = 3 [json_name = "publicKey"];
    {PROTOBUF_FIELD_OFFSET(Secp256k1VerifyRequest, _impl_.public_key_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::cusf::common::v1::Hex>()},
      {::_pbi::TcParser::GetTable<::cusf::common::v1::Hex>()},
      {::_pbi::TcParser::GetTable<::cusf::common::v1::ConsensusHex>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void Secp256k1VerifyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:cusf.crypto.v1.Secp256k1VerifyRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(_impl_.message_ != nullptr);
      _impl_.message_->Clear();
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(_impl_.signature_ != nullptr);
      _impl_.signature_->Clear();
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(_impl_.public_key_ != nullptr);
      _impl_.public_key_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Secp256k1VerifyRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Secp256k1VerifyRequest& this_ = static_cast<const Secp256k1VerifyRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Secp256k1VerifyRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Secp256k1VerifyRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:cusf.crypto.v1.Secp256k1VerifyRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .cusf.common.v1.Hex message = 1 [json_name = "message"];
  if ((cached_has_bits & 0x00000001u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.message_, this_._impl_.message_->GetCachedSize(), target,
        stream);
  }

  // .cusf.common.v1.Hex signature = 2 [json_name = "signature"];
  if ((cached_has_bits & 0x00000002u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *this_._impl_.signature_, this_._impl_.signature_->GetCachedSize(), target,
        stream);
  }

  // .cusf.common.v1.ConsensusHex public_key = 3 [json_name = "publicKey"];
  if ((cached_has_bits & 0x00000004u) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.public_key_, this_._impl_.public_key_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cusf.crypto.v1.Secp256k1VerifyRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Secp256k1VerifyRequest::ByteSizeLong(const MessageLite& base) {
  const Secp256k1VerifyRequest& this_ = static_cast<const Secp256k1VerifyRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Secp256k1VerifyRequest::ByteSizeLong() const {
  const Secp256k1VerifyRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:cusf.crypto.v1.Secp256k1VerifyRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    // .cusf.common.v1.Hex message = 1 [json_name = "message"];
    if ((cached_has_bits & 0x00000001u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.message_);
    }
    // .cusf.common.v1.Hex signature = 2 [json_name = "signature"];
    if ((cached_has_bits & 0x00000002u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.signature_);
    }
    // .cusf.common.v1.ConsensusHex public_key = 3 [json_name = "publicKey"];
    if ((cached_has_bits & 0x00000004u) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.public_key_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Secp256k1VerifyRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Secp256k1VerifyRequest*>(&to_msg);
  auto& from = static_cast<const Secp256k1VerifyRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:cusf.crypto.v1.Secp256k1VerifyRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007u) != 0) {
    if ((cached_has_bits & 0x00000001u) != 0) {
      ABSL_DCHECK(from._impl_.message_ != nullptr);
      if (_this->_impl_.message_ == nullptr) {
        _this->_impl_.message_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.message_);
      } else {
        _this->_impl_.message_->MergeFrom(*from._impl_.message_);
      }
    }
    if ((cached_has_bits & 0x00000002u) != 0) {
      ABSL_DCHECK(from._impl_.signature_ != nullptr);
      if (_this->_impl_.signature_ == nullptr) {
        _this->_impl_.signature_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.signature_);
      } else {
        _this->_impl_.signature_->MergeFrom(*from._impl_.signature_);
      }
    }
    if ((cached_has_bits & 0x00000004u) != 0) {
      ABSL_DCHECK(from._impl_.public_key_ != nullptr);
      if (_this->_impl_.public_key_ == nullptr) {
        _this->_impl_.public_key_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.public_key_);
      } else {
        _this->_impl_.public_key_->MergeFrom(*from._impl_.public_key_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Secp256k1VerifyRequest::CopyFrom(const Secp256k1VerifyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cusf.crypto.v1.Secp256k1VerifyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Secp256k1VerifyRequest::InternalSwap(Secp256k1VerifyRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Secp256k1VerifyRequest, _impl_.public_key_)
      + sizeof(Secp256k1VerifyRequest::_impl_.public_key_)
      - PROTOBUF_FIELD_OFFSET(Secp256k1VerifyRequest, _impl_.message_)>(
          reinterpret_cast<char*>(&_impl_.message_),
          reinterpret_cast<char*>(&other->_impl_.message_));
}

::google::protobuf::Metadata Secp256k1VerifyRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Secp256k1VerifyResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Secp256k1VerifyResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Secp256k1VerifyResponse, _impl_._has_bits_);
};

Secp256k1VerifyResponse::Secp256k1VerifyResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Secp256k1VerifyResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:cusf.crypto.v1.Secp256k1VerifyResponse)
}
Secp256k1VerifyResponse::Secp256k1VerifyResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Secp256k1VerifyResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Secp256k1VerifyResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE Secp256k1VerifyResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void Secp256k1VerifyResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.valid_ = {};
}
Secp256k1VerifyResponse::~Secp256k1VerifyResponse() {
  // @@protoc_insertion_point(destructor:cusf.crypto.v1.Secp256k1VerifyResponse)
  SharedDtor(*this);
}
inline void Secp256k1VerifyResponse::SharedDtor(MessageLite& self) {
  Secp256k1VerifyResponse& this_ = static_cast<Secp256k1VerifyResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Secp256k1VerifyResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Secp256k1VerifyResponse(arena);
}
constexpr auto Secp256k1VerifyResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(Secp256k1VerifyResponse),
                                            alignof(Secp256k1VerifyResponse));
}
constexpr auto Secp256k1VerifyResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Secp256k1VerifyResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Secp256k1VerifyResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Secp256k1VerifyResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Secp256k1VerifyResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Secp256k1VerifyResponse>(), &Secp256k1VerifyResponse::ByteSizeLong,
              &Secp256k1VerifyResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Secp256k1VerifyResponse, _impl_._cached_size_),
          false,
      },
      &Secp256k1VerifyResponse::kDescriptorMethods,
      &descriptor_table_cusf_2fcrypto_2fv1_2fcrypto_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const ::google::protobuf::internal::ClassDataFull
        Secp256k1VerifyResponse_class_data_ =
            Secp256k1VerifyResponse::InternalGenerateClassData_();

const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL Secp256k1VerifyResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Secp256k1VerifyResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Secp256k1VerifyResponse_class_data_.tc_table);
  return Secp256k1VerifyResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
Secp256k1VerifyResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Secp256k1VerifyResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Secp256k1VerifyResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::cusf::crypto::v1::Secp256k1VerifyResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool valid = 1 [json_name = "valid"];
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(Secp256k1VerifyResponse, _impl_.valid_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(Secp256k1VerifyResponse, _impl_.valid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool valid = 1 [json_name = "valid"];
    {PROTOBUF_FIELD_OFFSET(Secp256k1VerifyResponse, _impl_.valid_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void Secp256k1VerifyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:cusf.crypto.v1.Secp256k1VerifyResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.valid_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Secp256k1VerifyResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Secp256k1VerifyResponse& this_ = static_cast<const Secp256k1VerifyResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Secp256k1VerifyResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Secp256k1VerifyResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(serialize_to_array_start:cusf.crypto.v1.Secp256k1VerifyResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool valid = 1 [json_name = "valid"];
  if ((this_._impl_._has_bits_[0] & 0x00000001u) != 0) {
    if (this_._internal_valid() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_valid(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cusf.crypto.v1.Secp256k1VerifyResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Secp256k1VerifyResponse::ByteSizeLong(const MessageLite& base) {
  const Secp256k1VerifyResponse& this_ = static_cast<const Secp256k1VerifyResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Secp256k1VerifyResponse::ByteSizeLong() const {
  const Secp256k1VerifyResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:cusf.crypto.v1.Secp256k1VerifyResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // bool valid = 1 [json_name = "valid"];
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001u) != 0) {
      if (this_._internal_valid() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Secp256k1VerifyResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Secp256k1VerifyResponse*>(&to_msg);
  auto& from = static_cast<const Secp256k1VerifyResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:cusf.crypto.v1.Secp256k1VerifyResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001u) != 0) {
    if (from._internal_valid() != 0) {
      _this->_impl_.valid_ = from._impl_.valid_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Secp256k1VerifyResponse::CopyFrom(const Secp256k1VerifyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cusf.crypto.v1.Secp256k1VerifyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Secp256k1VerifyResponse::InternalSwap(Secp256k1VerifyResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.valid_, other->_impl_.valid_);
}

::google::protobuf::Metadata Secp256k1VerifyResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace crypto
}  // namespace cusf
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_cusf_2fcrypto_2fv1_2fcrypto_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
