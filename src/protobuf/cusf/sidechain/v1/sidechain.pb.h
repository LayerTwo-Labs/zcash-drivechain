// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: cusf/sidechain/v1/sidechain.proto
// Protobuf C++ Version: 6.30.1

#ifndef cusf_2fsidechain_2fv1_2fsidechain_2eproto_2epb_2eh
#define cusf_2fsidechain_2fv1_2fsidechain_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6030001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_cusf_2fsidechain_2fv1_2fsidechain_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_cusf_2fsidechain_2fv1_2fsidechain_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_cusf_2fsidechain_2fv1_2fsidechain_2eproto;
}  // extern "C"
namespace cusf {
namespace sidechain {
namespace v1 {
class BlockHeaderInfo;
struct BlockHeaderInfoDefaultTypeInternal;
extern BlockHeaderInfoDefaultTypeInternal _BlockHeaderInfo_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BlockHeaderInfo_class_data_;
class BlockInfo;
struct BlockInfoDefaultTypeInternal;
extern BlockInfoDefaultTypeInternal _BlockInfo_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BlockInfo_class_data_;
class GetMempoolTxsRequest;
struct GetMempoolTxsRequestDefaultTypeInternal;
extern GetMempoolTxsRequestDefaultTypeInternal _GetMempoolTxsRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetMempoolTxsRequest_class_data_;
class GetMempoolTxsResponse;
struct GetMempoolTxsResponseDefaultTypeInternal;
extern GetMempoolTxsResponseDefaultTypeInternal _GetMempoolTxsResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetMempoolTxsResponse_class_data_;
class GetUtxosRequest;
struct GetUtxosRequestDefaultTypeInternal;
extern GetUtxosRequestDefaultTypeInternal _GetUtxosRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetUtxosRequest_class_data_;
class GetUtxosResponse;
struct GetUtxosResponseDefaultTypeInternal;
extern GetUtxosResponseDefaultTypeInternal _GetUtxosResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull GetUtxosResponse_class_data_;
class SequenceId;
struct SequenceIdDefaultTypeInternal;
extern SequenceIdDefaultTypeInternal _SequenceId_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SequenceId_class_data_;
class SubmitTransactionRequest;
struct SubmitTransactionRequestDefaultTypeInternal;
extern SubmitTransactionRequestDefaultTypeInternal _SubmitTransactionRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubmitTransactionRequest_class_data_;
class SubmitTransactionResponse;
struct SubmitTransactionResponseDefaultTypeInternal;
extern SubmitTransactionResponseDefaultTypeInternal _SubmitTransactionResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubmitTransactionResponse_class_data_;
class SubscribeEventsRequest;
struct SubscribeEventsRequestDefaultTypeInternal;
extern SubscribeEventsRequestDefaultTypeInternal _SubscribeEventsRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubscribeEventsRequest_class_data_;
class SubscribeEventsResponse;
struct SubscribeEventsResponseDefaultTypeInternal;
extern SubscribeEventsResponseDefaultTypeInternal _SubscribeEventsResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubscribeEventsResponse_class_data_;
class SubscribeEventsResponse_Event;
struct SubscribeEventsResponse_EventDefaultTypeInternal;
extern SubscribeEventsResponse_EventDefaultTypeInternal _SubscribeEventsResponse_Event_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubscribeEventsResponse_Event_class_data_;
class SubscribeEventsResponse_Event_ConnectBlock;
struct SubscribeEventsResponse_Event_ConnectBlockDefaultTypeInternal;
extern SubscribeEventsResponse_Event_ConnectBlockDefaultTypeInternal _SubscribeEventsResponse_Event_ConnectBlock_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubscribeEventsResponse_Event_ConnectBlock_class_data_;
class SubscribeEventsResponse_Event_DisconnectBlock;
struct SubscribeEventsResponse_Event_DisconnectBlockDefaultTypeInternal;
extern SubscribeEventsResponse_Event_DisconnectBlockDefaultTypeInternal _SubscribeEventsResponse_Event_DisconnectBlock_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubscribeEventsResponse_Event_DisconnectBlock_class_data_;
class SubscribeEventsResponse_Event_MempoolTxAdded;
struct SubscribeEventsResponse_Event_MempoolTxAddedDefaultTypeInternal;
extern SubscribeEventsResponse_Event_MempoolTxAddedDefaultTypeInternal _SubscribeEventsResponse_Event_MempoolTxAdded_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubscribeEventsResponse_Event_MempoolTxAdded_class_data_;
class SubscribeEventsResponse_Event_MempoolTxRemoved;
struct SubscribeEventsResponse_Event_MempoolTxRemovedDefaultTypeInternal;
extern SubscribeEventsResponse_Event_MempoolTxRemovedDefaultTypeInternal _SubscribeEventsResponse_Event_MempoolTxRemoved_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull SubscribeEventsResponse_Event_MempoolTxRemoved_class_data_;
}  // namespace v1
}  // namespace sidechain
}  // namespace cusf
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace cusf {
namespace sidechain {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class SubscribeEventsResponse_Event_MempoolTxRemoved final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cusf.sidechain.v1.SubscribeEventsResponse.Event.MempoolTxRemoved) */ {
 public:
  inline SubscribeEventsResponse_Event_MempoolTxRemoved() : SubscribeEventsResponse_Event_MempoolTxRemoved(nullptr) {}
  ~SubscribeEventsResponse_Event_MempoolTxRemoved() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeEventsResponse_Event_MempoolTxRemoved* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeEventsResponse_Event_MempoolTxRemoved));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeEventsResponse_Event_MempoolTxRemoved(::google::protobuf::internal::ConstantInitialized);

  inline SubscribeEventsResponse_Event_MempoolTxRemoved(const SubscribeEventsResponse_Event_MempoolTxRemoved& from) : SubscribeEventsResponse_Event_MempoolTxRemoved(nullptr, from) {}
  inline SubscribeEventsResponse_Event_MempoolTxRemoved(SubscribeEventsResponse_Event_MempoolTxRemoved&& from) noexcept
      : SubscribeEventsResponse_Event_MempoolTxRemoved(nullptr, std::move(from)) {}
  inline SubscribeEventsResponse_Event_MempoolTxRemoved& operator=(const SubscribeEventsResponse_Event_MempoolTxRemoved& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeEventsResponse_Event_MempoolTxRemoved& operator=(SubscribeEventsResponse_Event_MempoolTxRemoved&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeEventsResponse_Event_MempoolTxRemoved& default_instance() {
    return *reinterpret_cast<const SubscribeEventsResponse_Event_MempoolTxRemoved*>(
        &_SubscribeEventsResponse_Event_MempoolTxRemoved_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(SubscribeEventsResponse_Event_MempoolTxRemoved& a, SubscribeEventsResponse_Event_MempoolTxRemoved& b) { a.Swap(&b); }
  inline void Swap(SubscribeEventsResponse_Event_MempoolTxRemoved* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeEventsResponse_Event_MempoolTxRemoved* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeEventsResponse_Event_MempoolTxRemoved* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeEventsResponse_Event_MempoolTxRemoved>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeEventsResponse_Event_MempoolTxRemoved& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeEventsResponse_Event_MempoolTxRemoved& from) { SubscribeEventsResponse_Event_MempoolTxRemoved::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubscribeEventsResponse_Event_MempoolTxRemoved* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cusf.sidechain.v1.SubscribeEventsResponse.Event.MempoolTxRemoved"; }

 protected:
  explicit SubscribeEventsResponse_Event_MempoolTxRemoved(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SubscribeEventsResponse_Event_MempoolTxRemoved(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubscribeEventsResponse_Event_MempoolTxRemoved& from);
  SubscribeEventsResponse_Event_MempoolTxRemoved(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SubscribeEventsResponse_Event_MempoolTxRemoved&& from) noexcept
      : SubscribeEventsResponse_Event_MempoolTxRemoved(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxidFieldNumber = 1,
  };
  // bytes txid = 1 [json_name = "txid"];
  void clear_txid() ;
  const std::string& txid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_txid(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_txid();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_txid();
  void set_allocated_txid(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_txid() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_txid(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_txid();

  public:
  // @@protoc_insertion_point(class_scope:cusf.sidechain.v1.SubscribeEventsResponse.Event.MempoolTxRemoved)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SubscribeEventsResponse_Event_MempoolTxRemoved& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr txid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cusf_2fsidechain_2fv1_2fsidechain_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SubscribeEventsResponse_Event_MempoolTxRemoved_class_data_;
// -------------------------------------------------------------------

class SubscribeEventsResponse_Event_MempoolTxAdded final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cusf.sidechain.v1.SubscribeEventsResponse.Event.MempoolTxAdded) */ {
 public:
  inline SubscribeEventsResponse_Event_MempoolTxAdded() : SubscribeEventsResponse_Event_MempoolTxAdded(nullptr) {}
  ~SubscribeEventsResponse_Event_MempoolTxAdded() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeEventsResponse_Event_MempoolTxAdded* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeEventsResponse_Event_MempoolTxAdded));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeEventsResponse_Event_MempoolTxAdded(::google::protobuf::internal::ConstantInitialized);

  inline SubscribeEventsResponse_Event_MempoolTxAdded(const SubscribeEventsResponse_Event_MempoolTxAdded& from) : SubscribeEventsResponse_Event_MempoolTxAdded(nullptr, from) {}
  inline SubscribeEventsResponse_Event_MempoolTxAdded(SubscribeEventsResponse_Event_MempoolTxAdded&& from) noexcept
      : SubscribeEventsResponse_Event_MempoolTxAdded(nullptr, std::move(from)) {}
  inline SubscribeEventsResponse_Event_MempoolTxAdded& operator=(const SubscribeEventsResponse_Event_MempoolTxAdded& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeEventsResponse_Event_MempoolTxAdded& operator=(SubscribeEventsResponse_Event_MempoolTxAdded&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeEventsResponse_Event_MempoolTxAdded& default_instance() {
    return *reinterpret_cast<const SubscribeEventsResponse_Event_MempoolTxAdded*>(
        &_SubscribeEventsResponse_Event_MempoolTxAdded_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(SubscribeEventsResponse_Event_MempoolTxAdded& a, SubscribeEventsResponse_Event_MempoolTxAdded& b) { a.Swap(&b); }
  inline void Swap(SubscribeEventsResponse_Event_MempoolTxAdded* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeEventsResponse_Event_MempoolTxAdded* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeEventsResponse_Event_MempoolTxAdded* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeEventsResponse_Event_MempoolTxAdded>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeEventsResponse_Event_MempoolTxAdded& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeEventsResponse_Event_MempoolTxAdded& from) { SubscribeEventsResponse_Event_MempoolTxAdded::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubscribeEventsResponse_Event_MempoolTxAdded* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cusf.sidechain.v1.SubscribeEventsResponse.Event.MempoolTxAdded"; }

 protected:
  explicit SubscribeEventsResponse_Event_MempoolTxAdded(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SubscribeEventsResponse_Event_MempoolTxAdded(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubscribeEventsResponse_Event_MempoolTxAdded& from);
  SubscribeEventsResponse_Event_MempoolTxAdded(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SubscribeEventsResponse_Event_MempoolTxAdded&& from) noexcept
      : SubscribeEventsResponse_Event_MempoolTxAdded(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTxidFieldNumber = 1,
  };
  // bytes txid = 1 [json_name = "txid"];
  void clear_txid() ;
  const std::string& txid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_txid(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_txid();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_txid();
  void set_allocated_txid(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_txid() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_txid(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_txid();

  public:
  // @@protoc_insertion_point(class_scope:cusf.sidechain.v1.SubscribeEventsResponse.Event.MempoolTxAdded)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SubscribeEventsResponse_Event_MempoolTxAdded& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr txid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cusf_2fsidechain_2fv1_2fsidechain_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SubscribeEventsResponse_Event_MempoolTxAdded_class_data_;
// -------------------------------------------------------------------

class SubscribeEventsResponse_Event_DisconnectBlock final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cusf.sidechain.v1.SubscribeEventsResponse.Event.DisconnectBlock) */ {
 public:
  inline SubscribeEventsResponse_Event_DisconnectBlock() : SubscribeEventsResponse_Event_DisconnectBlock(nullptr) {}
  ~SubscribeEventsResponse_Event_DisconnectBlock() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeEventsResponse_Event_DisconnectBlock* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeEventsResponse_Event_DisconnectBlock));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeEventsResponse_Event_DisconnectBlock(::google::protobuf::internal::ConstantInitialized);

  inline SubscribeEventsResponse_Event_DisconnectBlock(const SubscribeEventsResponse_Event_DisconnectBlock& from) : SubscribeEventsResponse_Event_DisconnectBlock(nullptr, from) {}
  inline SubscribeEventsResponse_Event_DisconnectBlock(SubscribeEventsResponse_Event_DisconnectBlock&& from) noexcept
      : SubscribeEventsResponse_Event_DisconnectBlock(nullptr, std::move(from)) {}
  inline SubscribeEventsResponse_Event_DisconnectBlock& operator=(const SubscribeEventsResponse_Event_DisconnectBlock& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeEventsResponse_Event_DisconnectBlock& operator=(SubscribeEventsResponse_Event_DisconnectBlock&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeEventsResponse_Event_DisconnectBlock& default_instance() {
    return *reinterpret_cast<const SubscribeEventsResponse_Event_DisconnectBlock*>(
        &_SubscribeEventsResponse_Event_DisconnectBlock_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(SubscribeEventsResponse_Event_DisconnectBlock& a, SubscribeEventsResponse_Event_DisconnectBlock& b) { a.Swap(&b); }
  inline void Swap(SubscribeEventsResponse_Event_DisconnectBlock* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeEventsResponse_Event_DisconnectBlock* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeEventsResponse_Event_DisconnectBlock* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeEventsResponse_Event_DisconnectBlock>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeEventsResponse_Event_DisconnectBlock& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeEventsResponse_Event_DisconnectBlock& from) { SubscribeEventsResponse_Event_DisconnectBlock::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubscribeEventsResponse_Event_DisconnectBlock* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cusf.sidechain.v1.SubscribeEventsResponse.Event.DisconnectBlock"; }

 protected:
  explicit SubscribeEventsResponse_Event_DisconnectBlock(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SubscribeEventsResponse_Event_DisconnectBlock(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubscribeEventsResponse_Event_DisconnectBlock& from);
  SubscribeEventsResponse_Event_DisconnectBlock(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SubscribeEventsResponse_Event_DisconnectBlock&& from) noexcept
      : SubscribeEventsResponse_Event_DisconnectBlock(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockHashFieldNumber = 1,
  };
  // bytes block_hash = 1 [json_name = "blockHash"];
  void clear_block_hash() ;
  const std::string& block_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_block_hash(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_block_hash();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_block_hash();
  void set_allocated_block_hash(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_block_hash() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_block_hash(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_block_hash();

  public:
  // @@protoc_insertion_point(class_scope:cusf.sidechain.v1.SubscribeEventsResponse.Event.DisconnectBlock)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SubscribeEventsResponse_Event_DisconnectBlock& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr block_hash_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cusf_2fsidechain_2fv1_2fsidechain_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SubscribeEventsResponse_Event_DisconnectBlock_class_data_;
// -------------------------------------------------------------------

class SubscribeEventsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cusf.sidechain.v1.SubscribeEventsRequest) */ {
 public:
  inline SubscribeEventsRequest() : SubscribeEventsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeEventsRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeEventsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeEventsRequest(::google::protobuf::internal::ConstantInitialized);

  inline SubscribeEventsRequest(const SubscribeEventsRequest& from) : SubscribeEventsRequest(nullptr, from) {}
  inline SubscribeEventsRequest(SubscribeEventsRequest&& from) noexcept
      : SubscribeEventsRequest(nullptr, std::move(from)) {}
  inline SubscribeEventsRequest& operator=(const SubscribeEventsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeEventsRequest& operator=(SubscribeEventsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeEventsRequest& default_instance() {
    return *reinterpret_cast<const SubscribeEventsRequest*>(
        &_SubscribeEventsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(SubscribeEventsRequest& a, SubscribeEventsRequest& b) { a.Swap(&b); }
  inline void Swap(SubscribeEventsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeEventsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeEventsRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubscribeEventsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubscribeEventsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubscribeEventsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cusf.sidechain.v1.SubscribeEventsRequest"; }

 protected:
  explicit SubscribeEventsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SubscribeEventsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubscribeEventsRequest& from);
  SubscribeEventsRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SubscribeEventsRequest&& from) noexcept
      : SubscribeEventsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cusf.sidechain.v1.SubscribeEventsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SubscribeEventsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cusf_2fsidechain_2fv1_2fsidechain_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SubscribeEventsRequest_class_data_;
// -------------------------------------------------------------------

class SubmitTransactionResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cusf.sidechain.v1.SubmitTransactionResponse) */ {
 public:
  inline SubmitTransactionResponse() : SubmitTransactionResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubmitTransactionResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubmitTransactionResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubmitTransactionResponse(::google::protobuf::internal::ConstantInitialized);

  inline SubmitTransactionResponse(const SubmitTransactionResponse& from) : SubmitTransactionResponse(nullptr, from) {}
  inline SubmitTransactionResponse(SubmitTransactionResponse&& from) noexcept
      : SubmitTransactionResponse(nullptr, std::move(from)) {}
  inline SubmitTransactionResponse& operator=(const SubmitTransactionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubmitTransactionResponse& operator=(SubmitTransactionResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubmitTransactionResponse& default_instance() {
    return *reinterpret_cast<const SubmitTransactionResponse*>(
        &_SubmitTransactionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(SubmitTransactionResponse& a, SubmitTransactionResponse& b) { a.Swap(&b); }
  inline void Swap(SubmitTransactionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubmitTransactionResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubmitTransactionResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<SubmitTransactionResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SubmitTransactionResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SubmitTransactionResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cusf.sidechain.v1.SubmitTransactionResponse"; }

 protected:
  explicit SubmitTransactionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SubmitTransactionResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubmitTransactionResponse& from);
  SubmitTransactionResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SubmitTransactionResponse&& from) noexcept
      : SubmitTransactionResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cusf.sidechain.v1.SubmitTransactionResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SubmitTransactionResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cusf_2fsidechain_2fv1_2fsidechain_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SubmitTransactionResponse_class_data_;
// -------------------------------------------------------------------

class SubmitTransactionRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cusf.sidechain.v1.SubmitTransactionRequest) */ {
 public:
  inline SubmitTransactionRequest() : SubmitTransactionRequest(nullptr) {}
  ~SubmitTransactionRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubmitTransactionRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubmitTransactionRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubmitTransactionRequest(::google::protobuf::internal::ConstantInitialized);

  inline SubmitTransactionRequest(const SubmitTransactionRequest& from) : SubmitTransactionRequest(nullptr, from) {}
  inline SubmitTransactionRequest(SubmitTransactionRequest&& from) noexcept
      : SubmitTransactionRequest(nullptr, std::move(from)) {}
  inline SubmitTransactionRequest& operator=(const SubmitTransactionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubmitTransactionRequest& operator=(SubmitTransactionRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubmitTransactionRequest& default_instance() {
    return *reinterpret_cast<const SubmitTransactionRequest*>(
        &_SubmitTransactionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(SubmitTransactionRequest& a, SubmitTransactionRequest& b) { a.Swap(&b); }
  inline void Swap(SubmitTransactionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubmitTransactionRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubmitTransactionRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubmitTransactionRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubmitTransactionRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubmitTransactionRequest& from) { SubmitTransactionRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubmitTransactionRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cusf.sidechain.v1.SubmitTransactionRequest"; }

 protected:
  explicit SubmitTransactionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SubmitTransactionRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubmitTransactionRequest& from);
  SubmitTransactionRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SubmitTransactionRequest&& from) noexcept
      : SubmitTransactionRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTransactionFieldNumber = 1,
  };
  // bytes transaction = 1 [json_name = "transaction"];
  void clear_transaction() ;
  const std::string& transaction() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_transaction(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_transaction();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_transaction();
  void set_allocated_transaction(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_transaction() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_transaction(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_transaction();

  public:
  // @@protoc_insertion_point(class_scope:cusf.sidechain.v1.SubmitTransactionRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SubmitTransactionRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr transaction_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cusf_2fsidechain_2fv1_2fsidechain_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SubmitTransactionRequest_class_data_;
// -------------------------------------------------------------------

class SequenceId final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cusf.sidechain.v1.SequenceId) */ {
 public:
  inline SequenceId() : SequenceId(nullptr) {}
  ~SequenceId() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SequenceId* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SequenceId));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SequenceId(::google::protobuf::internal::ConstantInitialized);

  inline SequenceId(const SequenceId& from) : SequenceId(nullptr, from) {}
  inline SequenceId(SequenceId&& from) noexcept
      : SequenceId(nullptr, std::move(from)) {}
  inline SequenceId& operator=(const SequenceId& from) {
    CopyFrom(from);
    return *this;
  }
  inline SequenceId& operator=(SequenceId&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SequenceId& default_instance() {
    return *reinterpret_cast<const SequenceId*>(
        &_SequenceId_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(SequenceId& a, SequenceId& b) { a.Swap(&b); }
  inline void Swap(SequenceId* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SequenceId* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SequenceId* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SequenceId>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SequenceId& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SequenceId& from) { SequenceId::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SequenceId* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cusf.sidechain.v1.SequenceId"; }

 protected:
  explicit SequenceId(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SequenceId(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SequenceId& from);
  SequenceId(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SequenceId&& from) noexcept
      : SequenceId(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSequenceIdFieldNumber = 1,
  };
  // uint64 sequence_id = 1 [json_name = "sequenceId"];
  void clear_sequence_id() ;
  ::uint64_t sequence_id() const;
  void set_sequence_id(::uint64_t value);

  private:
  ::uint64_t _internal_sequence_id() const;
  void _internal_set_sequence_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:cusf.sidechain.v1.SequenceId)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SequenceId& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint64_t sequence_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cusf_2fsidechain_2fv1_2fsidechain_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SequenceId_class_data_;
// -------------------------------------------------------------------

class GetUtxosResponse final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cusf.sidechain.v1.GetUtxosResponse) */ {
 public:
  inline GetUtxosResponse() : GetUtxosResponse(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetUtxosResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetUtxosResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetUtxosResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetUtxosResponse(const GetUtxosResponse& from) : GetUtxosResponse(nullptr, from) {}
  inline GetUtxosResponse(GetUtxosResponse&& from) noexcept
      : GetUtxosResponse(nullptr, std::move(from)) {}
  inline GetUtxosResponse& operator=(const GetUtxosResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetUtxosResponse& operator=(GetUtxosResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetUtxosResponse& default_instance() {
    return *reinterpret_cast<const GetUtxosResponse*>(
        &_GetUtxosResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(GetUtxosResponse& a, GetUtxosResponse& b) { a.Swap(&b); }
  inline void Swap(GetUtxosResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetUtxosResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetUtxosResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetUtxosResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetUtxosResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetUtxosResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cusf.sidechain.v1.GetUtxosResponse"; }

 protected:
  explicit GetUtxosResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetUtxosResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetUtxosResponse& from);
  GetUtxosResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetUtxosResponse&& from) noexcept
      : GetUtxosResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cusf.sidechain.v1.GetUtxosResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetUtxosResponse& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cusf_2fsidechain_2fv1_2fsidechain_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetUtxosResponse_class_data_;
// -------------------------------------------------------------------

class GetUtxosRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cusf.sidechain.v1.GetUtxosRequest) */ {
 public:
  inline GetUtxosRequest() : GetUtxosRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetUtxosRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetUtxosRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetUtxosRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetUtxosRequest(const GetUtxosRequest& from) : GetUtxosRequest(nullptr, from) {}
  inline GetUtxosRequest(GetUtxosRequest&& from) noexcept
      : GetUtxosRequest(nullptr, std::move(from)) {}
  inline GetUtxosRequest& operator=(const GetUtxosRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetUtxosRequest& operator=(GetUtxosRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetUtxosRequest& default_instance() {
    return *reinterpret_cast<const GetUtxosRequest*>(
        &_GetUtxosRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(GetUtxosRequest& a, GetUtxosRequest& b) { a.Swap(&b); }
  inline void Swap(GetUtxosRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetUtxosRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetUtxosRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetUtxosRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetUtxosRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetUtxosRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cusf.sidechain.v1.GetUtxosRequest"; }

 protected:
  explicit GetUtxosRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetUtxosRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetUtxosRequest& from);
  GetUtxosRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetUtxosRequest&& from) noexcept
      : GetUtxosRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cusf.sidechain.v1.GetUtxosRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetUtxosRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cusf_2fsidechain_2fv1_2fsidechain_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetUtxosRequest_class_data_;
// -------------------------------------------------------------------

class GetMempoolTxsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cusf.sidechain.v1.GetMempoolTxsRequest) */ {
 public:
  inline GetMempoolTxsRequest() : GetMempoolTxsRequest(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetMempoolTxsRequest* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetMempoolTxsRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMempoolTxsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetMempoolTxsRequest(const GetMempoolTxsRequest& from) : GetMempoolTxsRequest(nullptr, from) {}
  inline GetMempoolTxsRequest(GetMempoolTxsRequest&& from) noexcept
      : GetMempoolTxsRequest(nullptr, std::move(from)) {}
  inline GetMempoolTxsRequest& operator=(const GetMempoolTxsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMempoolTxsRequest& operator=(GetMempoolTxsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMempoolTxsRequest& default_instance() {
    return *reinterpret_cast<const GetMempoolTxsRequest*>(
        &_GetMempoolTxsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetMempoolTxsRequest& a, GetMempoolTxsRequest& b) { a.Swap(&b); }
  inline void Swap(GetMempoolTxsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMempoolTxsRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMempoolTxsRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetMempoolTxsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetMempoolTxsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetMempoolTxsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cusf.sidechain.v1.GetMempoolTxsRequest"; }

 protected:
  explicit GetMempoolTxsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetMempoolTxsRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetMempoolTxsRequest& from);
  GetMempoolTxsRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetMempoolTxsRequest&& from) noexcept
      : GetMempoolTxsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cusf.sidechain.v1.GetMempoolTxsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetMempoolTxsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cusf_2fsidechain_2fv1_2fsidechain_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetMempoolTxsRequest_class_data_;
// -------------------------------------------------------------------

class BlockInfo final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:cusf.sidechain.v1.BlockInfo) */ {
 public:
  inline BlockInfo() : BlockInfo(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BlockInfo* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BlockInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlockInfo(::google::protobuf::internal::ConstantInitialized);

  inline BlockInfo(const BlockInfo& from) : BlockInfo(nullptr, from) {}
  inline BlockInfo(BlockInfo&& from) noexcept
      : BlockInfo(nullptr, std::move(from)) {}
  inline BlockInfo& operator=(const BlockInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockInfo& operator=(BlockInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockInfo& default_instance() {
    return *reinterpret_cast<const BlockInfo*>(
        &_BlockInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(BlockInfo& a, BlockInfo& b) { a.Swap(&b); }
  inline void Swap(BlockInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlockInfo* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<BlockInfo>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const BlockInfo& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const BlockInfo& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cusf.sidechain.v1.BlockInfo"; }

 protected:
  explicit BlockInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BlockInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BlockInfo& from);
  BlockInfo(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BlockInfo&& from) noexcept
      : BlockInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:cusf.sidechain.v1.BlockInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BlockInfo& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_cusf_2fsidechain_2fv1_2fsidechain_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BlockInfo_class_data_;
// -------------------------------------------------------------------

class BlockHeaderInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cusf.sidechain.v1.BlockHeaderInfo) */ {
 public:
  inline BlockHeaderInfo() : BlockHeaderInfo(nullptr) {}
  ~BlockHeaderInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BlockHeaderInfo* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BlockHeaderInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BlockHeaderInfo(::google::protobuf::internal::ConstantInitialized);

  inline BlockHeaderInfo(const BlockHeaderInfo& from) : BlockHeaderInfo(nullptr, from) {}
  inline BlockHeaderInfo(BlockHeaderInfo&& from) noexcept
      : BlockHeaderInfo(nullptr, std::move(from)) {}
  inline BlockHeaderInfo& operator=(const BlockHeaderInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline BlockHeaderInfo& operator=(BlockHeaderInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BlockHeaderInfo& default_instance() {
    return *reinterpret_cast<const BlockHeaderInfo*>(
        &_BlockHeaderInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(BlockHeaderInfo& a, BlockHeaderInfo& b) { a.Swap(&b); }
  inline void Swap(BlockHeaderInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BlockHeaderInfo* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BlockHeaderInfo* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BlockHeaderInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BlockHeaderInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BlockHeaderInfo& from) { BlockHeaderInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BlockHeaderInfo* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cusf.sidechain.v1.BlockHeaderInfo"; }

 protected:
  explicit BlockHeaderInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BlockHeaderInfo(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BlockHeaderInfo& from);
  BlockHeaderInfo(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BlockHeaderInfo&& from) noexcept
      : BlockHeaderInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockHashFieldNumber = 1,
    kPrevBlockHashFieldNumber = 2,
    kPrevMainBlockHashFieldNumber = 3,
    kHeightFieldNumber = 4,
  };
  // bytes block_hash = 1 [json_name = "blockHash"];
  void clear_block_hash() ;
  const std::string& block_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_block_hash(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_block_hash();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_block_hash();
  void set_allocated_block_hash(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_block_hash() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_block_hash(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_block_hash();

  public:
  // bytes prev_block_hash = 2 [json_name = "prevBlockHash"];
  void clear_prev_block_hash() ;
  const std::string& prev_block_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_prev_block_hash(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_prev_block_hash();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_prev_block_hash();
  void set_allocated_prev_block_hash(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_prev_block_hash() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_prev_block_hash(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_prev_block_hash();

  public:
  // bytes prev_main_block_hash = 3 [json_name = "prevMainBlockHash"];
  void clear_prev_main_block_hash() ;
  const std::string& prev_main_block_hash() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_prev_main_block_hash(Arg_&& arg, Args_... args);
  std::string* PROTOBUF_NONNULL mutable_prev_main_block_hash();
  [[nodiscard]] std::string* PROTOBUF_NULLABLE release_prev_main_block_hash();
  void set_allocated_prev_main_block_hash(std::string* PROTOBUF_NULLABLE value);

  private:
  const std::string& _internal_prev_main_block_hash() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_prev_main_block_hash(const std::string& value);
  std::string* PROTOBUF_NONNULL _internal_mutable_prev_main_block_hash();

  public:
  // uint32 height = 4 [json_name = "height"];
  void clear_height() ;
  ::uint32_t height() const;
  void set_height(::uint32_t value);

  private:
  ::uint32_t _internal_height() const;
  void _internal_set_height(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:cusf.sidechain.v1.BlockHeaderInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 4,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BlockHeaderInfo& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr block_hash_;
    ::google::protobuf::internal::ArenaStringPtr prev_block_hash_;
    ::google::protobuf::internal::ArenaStringPtr prev_main_block_hash_;
    ::uint32_t height_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cusf_2fsidechain_2fv1_2fsidechain_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BlockHeaderInfo_class_data_;
// -------------------------------------------------------------------

class SubscribeEventsResponse_Event_ConnectBlock final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cusf.sidechain.v1.SubscribeEventsResponse.Event.ConnectBlock) */ {
 public:
  inline SubscribeEventsResponse_Event_ConnectBlock() : SubscribeEventsResponse_Event_ConnectBlock(nullptr) {}
  ~SubscribeEventsResponse_Event_ConnectBlock() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeEventsResponse_Event_ConnectBlock* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeEventsResponse_Event_ConnectBlock));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeEventsResponse_Event_ConnectBlock(::google::protobuf::internal::ConstantInitialized);

  inline SubscribeEventsResponse_Event_ConnectBlock(const SubscribeEventsResponse_Event_ConnectBlock& from) : SubscribeEventsResponse_Event_ConnectBlock(nullptr, from) {}
  inline SubscribeEventsResponse_Event_ConnectBlock(SubscribeEventsResponse_Event_ConnectBlock&& from) noexcept
      : SubscribeEventsResponse_Event_ConnectBlock(nullptr, std::move(from)) {}
  inline SubscribeEventsResponse_Event_ConnectBlock& operator=(const SubscribeEventsResponse_Event_ConnectBlock& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeEventsResponse_Event_ConnectBlock& operator=(SubscribeEventsResponse_Event_ConnectBlock&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeEventsResponse_Event_ConnectBlock& default_instance() {
    return *reinterpret_cast<const SubscribeEventsResponse_Event_ConnectBlock*>(
        &_SubscribeEventsResponse_Event_ConnectBlock_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(SubscribeEventsResponse_Event_ConnectBlock& a, SubscribeEventsResponse_Event_ConnectBlock& b) { a.Swap(&b); }
  inline void Swap(SubscribeEventsResponse_Event_ConnectBlock* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeEventsResponse_Event_ConnectBlock* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeEventsResponse_Event_ConnectBlock* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeEventsResponse_Event_ConnectBlock>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeEventsResponse_Event_ConnectBlock& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeEventsResponse_Event_ConnectBlock& from) { SubscribeEventsResponse_Event_ConnectBlock::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubscribeEventsResponse_Event_ConnectBlock* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cusf.sidechain.v1.SubscribeEventsResponse.Event.ConnectBlock"; }

 protected:
  explicit SubscribeEventsResponse_Event_ConnectBlock(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SubscribeEventsResponse_Event_ConnectBlock(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubscribeEventsResponse_Event_ConnectBlock& from);
  SubscribeEventsResponse_Event_ConnectBlock(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SubscribeEventsResponse_Event_ConnectBlock&& from) noexcept
      : SubscribeEventsResponse_Event_ConnectBlock(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHeaderInfoFieldNumber = 1,
    kBlockInfoFieldNumber = 2,
  };
  // .cusf.sidechain.v1.BlockHeaderInfo header_info = 1 [json_name = "headerInfo"];
  bool has_header_info() const;
  void clear_header_info() ;
  const ::cusf::sidechain::v1::BlockHeaderInfo& header_info() const;
  [[nodiscard]] ::cusf::sidechain::v1::BlockHeaderInfo* PROTOBUF_NULLABLE release_header_info();
  ::cusf::sidechain::v1::BlockHeaderInfo* PROTOBUF_NONNULL mutable_header_info();
  void set_allocated_header_info(::cusf::sidechain::v1::BlockHeaderInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_header_info(::cusf::sidechain::v1::BlockHeaderInfo* PROTOBUF_NULLABLE value);
  ::cusf::sidechain::v1::BlockHeaderInfo* PROTOBUF_NULLABLE unsafe_arena_release_header_info();

  private:
  const ::cusf::sidechain::v1::BlockHeaderInfo& _internal_header_info() const;
  ::cusf::sidechain::v1::BlockHeaderInfo* PROTOBUF_NONNULL _internal_mutable_header_info();

  public:
  // .cusf.sidechain.v1.BlockInfo block_info = 2 [json_name = "blockInfo"];
  bool has_block_info() const;
  void clear_block_info() ;
  const ::cusf::sidechain::v1::BlockInfo& block_info() const;
  [[nodiscard]] ::cusf::sidechain::v1::BlockInfo* PROTOBUF_NULLABLE release_block_info();
  ::cusf::sidechain::v1::BlockInfo* PROTOBUF_NONNULL mutable_block_info();
  void set_allocated_block_info(::cusf::sidechain::v1::BlockInfo* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_block_info(::cusf::sidechain::v1::BlockInfo* PROTOBUF_NULLABLE value);
  ::cusf::sidechain::v1::BlockInfo* PROTOBUF_NULLABLE unsafe_arena_release_block_info();

  private:
  const ::cusf::sidechain::v1::BlockInfo& _internal_block_info() const;
  ::cusf::sidechain::v1::BlockInfo* PROTOBUF_NONNULL _internal_mutable_block_info();

  public:
  // @@protoc_insertion_point(class_scope:cusf.sidechain.v1.SubscribeEventsResponse.Event.ConnectBlock)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SubscribeEventsResponse_Event_ConnectBlock& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cusf::sidechain::v1::BlockHeaderInfo* PROTOBUF_NULLABLE header_info_;
    ::cusf::sidechain::v1::BlockInfo* PROTOBUF_NULLABLE block_info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cusf_2fsidechain_2fv1_2fsidechain_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SubscribeEventsResponse_Event_ConnectBlock_class_data_;
// -------------------------------------------------------------------

class GetMempoolTxsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cusf.sidechain.v1.GetMempoolTxsResponse) */ {
 public:
  inline GetMempoolTxsResponse() : GetMempoolTxsResponse(nullptr) {}
  ~GetMempoolTxsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(GetMempoolTxsResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(GetMempoolTxsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetMempoolTxsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetMempoolTxsResponse(const GetMempoolTxsResponse& from) : GetMempoolTxsResponse(nullptr, from) {}
  inline GetMempoolTxsResponse(GetMempoolTxsResponse&& from) noexcept
      : GetMempoolTxsResponse(nullptr, std::move(from)) {}
  inline GetMempoolTxsResponse& operator=(const GetMempoolTxsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetMempoolTxsResponse& operator=(GetMempoolTxsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetMempoolTxsResponse& default_instance() {
    return *reinterpret_cast<const GetMempoolTxsResponse*>(
        &_GetMempoolTxsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(GetMempoolTxsResponse& a, GetMempoolTxsResponse& b) { a.Swap(&b); }
  inline void Swap(GetMempoolTxsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetMempoolTxsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetMempoolTxsResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<GetMempoolTxsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetMempoolTxsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetMempoolTxsResponse& from) { GetMempoolTxsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(GetMempoolTxsResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cusf.sidechain.v1.GetMempoolTxsResponse"; }

 protected:
  explicit GetMempoolTxsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  GetMempoolTxsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const GetMempoolTxsResponse& from);
  GetMempoolTxsResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, GetMempoolTxsResponse&& from) noexcept
      : GetMempoolTxsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSequenceIdFieldNumber = 1,
  };
  // .cusf.sidechain.v1.SequenceId sequence_id = 1 [json_name = "sequenceId"];
  bool has_sequence_id() const;
  void clear_sequence_id() ;
  const ::cusf::sidechain::v1::SequenceId& sequence_id() const;
  [[nodiscard]] ::cusf::sidechain::v1::SequenceId* PROTOBUF_NULLABLE release_sequence_id();
  ::cusf::sidechain::v1::SequenceId* PROTOBUF_NONNULL mutable_sequence_id();
  void set_allocated_sequence_id(::cusf::sidechain::v1::SequenceId* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_sequence_id(::cusf::sidechain::v1::SequenceId* PROTOBUF_NULLABLE value);
  ::cusf::sidechain::v1::SequenceId* PROTOBUF_NULLABLE unsafe_arena_release_sequence_id();

  private:
  const ::cusf::sidechain::v1::SequenceId& _internal_sequence_id() const;
  ::cusf::sidechain::v1::SequenceId* PROTOBUF_NONNULL _internal_mutable_sequence_id();

  public:
  // @@protoc_insertion_point(class_scope:cusf.sidechain.v1.GetMempoolTxsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   1, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const GetMempoolTxsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cusf::sidechain::v1::SequenceId* PROTOBUF_NULLABLE sequence_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cusf_2fsidechain_2fv1_2fsidechain_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull GetMempoolTxsResponse_class_data_;
// -------------------------------------------------------------------

class SubscribeEventsResponse_Event final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cusf.sidechain.v1.SubscribeEventsResponse.Event) */ {
 public:
  inline SubscribeEventsResponse_Event() : SubscribeEventsResponse_Event(nullptr) {}
  ~SubscribeEventsResponse_Event() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeEventsResponse_Event* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeEventsResponse_Event));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeEventsResponse_Event(::google::protobuf::internal::ConstantInitialized);

  inline SubscribeEventsResponse_Event(const SubscribeEventsResponse_Event& from) : SubscribeEventsResponse_Event(nullptr, from) {}
  inline SubscribeEventsResponse_Event(SubscribeEventsResponse_Event&& from) noexcept
      : SubscribeEventsResponse_Event(nullptr, std::move(from)) {}
  inline SubscribeEventsResponse_Event& operator=(const SubscribeEventsResponse_Event& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeEventsResponse_Event& operator=(SubscribeEventsResponse_Event&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeEventsResponse_Event& default_instance() {
    return *reinterpret_cast<const SubscribeEventsResponse_Event*>(
        &_SubscribeEventsResponse_Event_default_instance_);
  }
  enum EventCase {
    kConnectBlock = 1,
    kDisconnectBlock = 2,
    kMempoolTxAdded = 3,
    kMempoolTxRemoved = 4,
    EVENT_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(SubscribeEventsResponse_Event& a, SubscribeEventsResponse_Event& b) { a.Swap(&b); }
  inline void Swap(SubscribeEventsResponse_Event* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeEventsResponse_Event* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeEventsResponse_Event* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeEventsResponse_Event>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeEventsResponse_Event& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeEventsResponse_Event& from) { SubscribeEventsResponse_Event::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubscribeEventsResponse_Event* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cusf.sidechain.v1.SubscribeEventsResponse.Event"; }

 protected:
  explicit SubscribeEventsResponse_Event(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SubscribeEventsResponse_Event(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubscribeEventsResponse_Event& from);
  SubscribeEventsResponse_Event(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SubscribeEventsResponse_Event&& from) noexcept
      : SubscribeEventsResponse_Event(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using ConnectBlock = SubscribeEventsResponse_Event_ConnectBlock;
  using DisconnectBlock = SubscribeEventsResponse_Event_DisconnectBlock;
  using MempoolTxAdded = SubscribeEventsResponse_Event_MempoolTxAdded;
  using MempoolTxRemoved = SubscribeEventsResponse_Event_MempoolTxRemoved;

  // accessors -------------------------------------------------------
  enum : int {
    kConnectBlockFieldNumber = 1,
    kDisconnectBlockFieldNumber = 2,
    kMempoolTxAddedFieldNumber = 3,
    kMempoolTxRemovedFieldNumber = 4,
  };
  // .cusf.sidechain.v1.SubscribeEventsResponse.Event.ConnectBlock connect_block = 1 [json_name = "connectBlock"];
  bool has_connect_block() const;
  private:
  bool _internal_has_connect_block() const;

  public:
  void clear_connect_block() ;
  const ::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock& connect_block() const;
  [[nodiscard]] ::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock* PROTOBUF_NULLABLE release_connect_block();
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock* PROTOBUF_NONNULL mutable_connect_block();
  void set_allocated_connect_block(::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_connect_block(::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock* PROTOBUF_NULLABLE value);
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock* PROTOBUF_NULLABLE unsafe_arena_release_connect_block();

  private:
  const ::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock& _internal_connect_block() const;
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock* PROTOBUF_NONNULL _internal_mutable_connect_block();

  public:
  // .cusf.sidechain.v1.SubscribeEventsResponse.Event.DisconnectBlock disconnect_block = 2 [json_name = "disconnectBlock"];
  bool has_disconnect_block() const;
  private:
  bool _internal_has_disconnect_block() const;

  public:
  void clear_disconnect_block() ;
  const ::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock& disconnect_block() const;
  [[nodiscard]] ::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock* PROTOBUF_NULLABLE release_disconnect_block();
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock* PROTOBUF_NONNULL mutable_disconnect_block();
  void set_allocated_disconnect_block(::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_disconnect_block(::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock* PROTOBUF_NULLABLE value);
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock* PROTOBUF_NULLABLE unsafe_arena_release_disconnect_block();

  private:
  const ::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock& _internal_disconnect_block() const;
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock* PROTOBUF_NONNULL _internal_mutable_disconnect_block();

  public:
  // .cusf.sidechain.v1.SubscribeEventsResponse.Event.MempoolTxAdded mempool_tx_added = 3 [json_name = "mempoolTxAdded"];
  bool has_mempool_tx_added() const;
  private:
  bool _internal_has_mempool_tx_added() const;

  public:
  void clear_mempool_tx_added() ;
  const ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded& mempool_tx_added() const;
  [[nodiscard]] ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded* PROTOBUF_NULLABLE release_mempool_tx_added();
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded* PROTOBUF_NONNULL mutable_mempool_tx_added();
  void set_allocated_mempool_tx_added(::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_mempool_tx_added(::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded* PROTOBUF_NULLABLE value);
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded* PROTOBUF_NULLABLE unsafe_arena_release_mempool_tx_added();

  private:
  const ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded& _internal_mempool_tx_added() const;
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded* PROTOBUF_NONNULL _internal_mutable_mempool_tx_added();

  public:
  // .cusf.sidechain.v1.SubscribeEventsResponse.Event.MempoolTxRemoved mempool_tx_removed = 4 [json_name = "mempoolTxRemoved"];
  bool has_mempool_tx_removed() const;
  private:
  bool _internal_has_mempool_tx_removed() const;

  public:
  void clear_mempool_tx_removed() ;
  const ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved& mempool_tx_removed() const;
  [[nodiscard]] ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved* PROTOBUF_NULLABLE release_mempool_tx_removed();
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved* PROTOBUF_NONNULL mutable_mempool_tx_removed();
  void set_allocated_mempool_tx_removed(::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_mempool_tx_removed(::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved* PROTOBUF_NULLABLE value);
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved* PROTOBUF_NULLABLE unsafe_arena_release_mempool_tx_removed();

  private:
  const ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved& _internal_mempool_tx_removed() const;
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved* PROTOBUF_NONNULL _internal_mutable_mempool_tx_removed();

  public:
  void clear_event();
  EventCase event_case() const;
  // @@protoc_insertion_point(class_scope:cusf.sidechain.v1.SubscribeEventsResponse.Event)
 private:
  class _Internal;
  void set_has_connect_block();
  void set_has_disconnect_block();
  void set_has_mempool_tx_added();
  void set_has_mempool_tx_removed();
  inline bool has_event() const;
  inline void clear_has_event();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 4,
                                   4, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SubscribeEventsResponse_Event& from_msg);
    union EventUnion {
      constexpr EventUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE connect_block_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE disconnect_block_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE mempool_tx_added_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE mempool_tx_removed_;
    } event_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cusf_2fsidechain_2fv1_2fsidechain_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SubscribeEventsResponse_Event_class_data_;
// -------------------------------------------------------------------

class SubscribeEventsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:cusf.sidechain.v1.SubscribeEventsResponse) */ {
 public:
  inline SubscribeEventsResponse() : SubscribeEventsResponse(nullptr) {}
  ~SubscribeEventsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(SubscribeEventsResponse* PROTOBUF_NONNULL msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(SubscribeEventsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SubscribeEventsResponse(::google::protobuf::internal::ConstantInitialized);

  inline SubscribeEventsResponse(const SubscribeEventsResponse& from) : SubscribeEventsResponse(nullptr, from) {}
  inline SubscribeEventsResponse(SubscribeEventsResponse&& from) noexcept
      : SubscribeEventsResponse(nullptr, std::move(from)) {}
  inline SubscribeEventsResponse& operator=(const SubscribeEventsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SubscribeEventsResponse& operator=(SubscribeEventsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SubscribeEventsResponse& default_instance() {
    return *reinterpret_cast<const SubscribeEventsResponse*>(
        &_SubscribeEventsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(SubscribeEventsResponse& a, SubscribeEventsResponse& b) { a.Swap(&b); }
  inline void Swap(SubscribeEventsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SubscribeEventsResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SubscribeEventsResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<SubscribeEventsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SubscribeEventsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SubscribeEventsResponse& from) { SubscribeEventsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(SubscribeEventsResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "cusf.sidechain.v1.SubscribeEventsResponse"; }

 protected:
  explicit SubscribeEventsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  SubscribeEventsResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const SubscribeEventsResponse& from);
  SubscribeEventsResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, SubscribeEventsResponse&& from) noexcept
      : SubscribeEventsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using Event = SubscribeEventsResponse_Event;

  // accessors -------------------------------------------------------
  enum : int {
    kSequenceIdFieldNumber = 1,
    kEventFieldNumber = 2,
  };
  // .cusf.sidechain.v1.SequenceId sequence_id = 1 [json_name = "sequenceId"];
  bool has_sequence_id() const;
  void clear_sequence_id() ;
  const ::cusf::sidechain::v1::SequenceId& sequence_id() const;
  [[nodiscard]] ::cusf::sidechain::v1::SequenceId* PROTOBUF_NULLABLE release_sequence_id();
  ::cusf::sidechain::v1::SequenceId* PROTOBUF_NONNULL mutable_sequence_id();
  void set_allocated_sequence_id(::cusf::sidechain::v1::SequenceId* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_sequence_id(::cusf::sidechain::v1::SequenceId* PROTOBUF_NULLABLE value);
  ::cusf::sidechain::v1::SequenceId* PROTOBUF_NULLABLE unsafe_arena_release_sequence_id();

  private:
  const ::cusf::sidechain::v1::SequenceId& _internal_sequence_id() const;
  ::cusf::sidechain::v1::SequenceId* PROTOBUF_NONNULL _internal_mutable_sequence_id();

  public:
  // .cusf.sidechain.v1.SubscribeEventsResponse.Event event = 2 [json_name = "event"];
  bool has_event() const;
  void clear_event() ;
  const ::cusf::sidechain::v1::SubscribeEventsResponse_Event& event() const;
  [[nodiscard]] ::cusf::sidechain::v1::SubscribeEventsResponse_Event* PROTOBUF_NULLABLE release_event();
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event* PROTOBUF_NONNULL mutable_event();
  void set_allocated_event(::cusf::sidechain::v1::SubscribeEventsResponse_Event* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_event(::cusf::sidechain::v1::SubscribeEventsResponse_Event* PROTOBUF_NULLABLE value);
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event* PROTOBUF_NULLABLE unsafe_arena_release_event();

  private:
  const ::cusf::sidechain::v1::SubscribeEventsResponse_Event& _internal_event() const;
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event* PROTOBUF_NONNULL _internal_mutable_event();

  public:
  // @@protoc_insertion_point(class_scope:cusf.sidechain.v1.SubscribeEventsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   2, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const SubscribeEventsResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::cusf::sidechain::v1::SequenceId* PROTOBUF_NULLABLE sequence_id_;
    ::cusf::sidechain::v1::SubscribeEventsResponse_Event* PROTOBUF_NULLABLE event_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_cusf_2fsidechain_2fv1_2fsidechain_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull SubscribeEventsResponse_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// SequenceId

// uint64 sequence_id = 1 [json_name = "sequenceId"];
inline void SequenceId::clear_sequence_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sequence_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t SequenceId::sequence_id() const {
  // @@protoc_insertion_point(field_get:cusf.sidechain.v1.SequenceId.sequence_id)
  return _internal_sequence_id();
}
inline void SequenceId::set_sequence_id(::uint64_t value) {
  _internal_set_sequence_id(value);
  _impl_._has_bits_[0] |= 0x00000001u;
  // @@protoc_insertion_point(field_set:cusf.sidechain.v1.SequenceId.sequence_id)
}
inline ::uint64_t SequenceId::_internal_sequence_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sequence_id_;
}
inline void SequenceId::_internal_set_sequence_id(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sequence_id_ = value;
}

// -------------------------------------------------------------------

// BlockHeaderInfo

// bytes block_hash = 1 [json_name = "blockHash"];
inline void BlockHeaderInfo::clear_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& BlockHeaderInfo::block_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cusf.sidechain.v1.BlockHeaderInfo.block_hash)
  return _internal_block_hash();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BlockHeaderInfo::set_block_hash(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.block_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cusf.sidechain.v1.BlockHeaderInfo.block_hash)
}
inline std::string* PROTOBUF_NONNULL BlockHeaderInfo::mutable_block_hash()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_block_hash();
  // @@protoc_insertion_point(field_mutable:cusf.sidechain.v1.BlockHeaderInfo.block_hash)
  return _s;
}
inline const std::string& BlockHeaderInfo::_internal_block_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_hash_.Get();
}
inline void BlockHeaderInfo::_internal_set_block_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.block_hash_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL BlockHeaderInfo::_internal_mutable_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.block_hash_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE BlockHeaderInfo::release_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cusf.sidechain.v1.BlockHeaderInfo.block_hash)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.block_hash_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.block_hash_.Set("", GetArena());
  }
  return released;
}
inline void BlockHeaderInfo::set_allocated_block_hash(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.block_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.block_hash_.IsDefault()) {
    _impl_.block_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cusf.sidechain.v1.BlockHeaderInfo.block_hash)
}

// bytes prev_block_hash = 2 [json_name = "prevBlockHash"];
inline void BlockHeaderInfo::clear_prev_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prev_block_hash_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& BlockHeaderInfo::prev_block_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cusf.sidechain.v1.BlockHeaderInfo.prev_block_hash)
  return _internal_prev_block_hash();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BlockHeaderInfo::set_prev_block_hash(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.prev_block_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cusf.sidechain.v1.BlockHeaderInfo.prev_block_hash)
}
inline std::string* PROTOBUF_NONNULL BlockHeaderInfo::mutable_prev_block_hash()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_prev_block_hash();
  // @@protoc_insertion_point(field_mutable:cusf.sidechain.v1.BlockHeaderInfo.prev_block_hash)
  return _s;
}
inline const std::string& BlockHeaderInfo::_internal_prev_block_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.prev_block_hash_.Get();
}
inline void BlockHeaderInfo::_internal_set_prev_block_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.prev_block_hash_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL BlockHeaderInfo::_internal_mutable_prev_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.prev_block_hash_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE BlockHeaderInfo::release_prev_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cusf.sidechain.v1.BlockHeaderInfo.prev_block_hash)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.prev_block_hash_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.prev_block_hash_.Set("", GetArena());
  }
  return released;
}
inline void BlockHeaderInfo::set_allocated_prev_block_hash(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.prev_block_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.prev_block_hash_.IsDefault()) {
    _impl_.prev_block_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cusf.sidechain.v1.BlockHeaderInfo.prev_block_hash)
}

// bytes prev_main_block_hash = 3 [json_name = "prevMainBlockHash"];
inline void BlockHeaderInfo::clear_prev_main_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.prev_main_block_hash_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& BlockHeaderInfo::prev_main_block_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cusf.sidechain.v1.BlockHeaderInfo.prev_main_block_hash)
  return _internal_prev_main_block_hash();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BlockHeaderInfo::set_prev_main_block_hash(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.prev_main_block_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cusf.sidechain.v1.BlockHeaderInfo.prev_main_block_hash)
}
inline std::string* PROTOBUF_NONNULL BlockHeaderInfo::mutable_prev_main_block_hash()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_prev_main_block_hash();
  // @@protoc_insertion_point(field_mutable:cusf.sidechain.v1.BlockHeaderInfo.prev_main_block_hash)
  return _s;
}
inline const std::string& BlockHeaderInfo::_internal_prev_main_block_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.prev_main_block_hash_.Get();
}
inline void BlockHeaderInfo::_internal_set_prev_main_block_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.prev_main_block_hash_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL BlockHeaderInfo::_internal_mutable_prev_main_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.prev_main_block_hash_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE BlockHeaderInfo::release_prev_main_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cusf.sidechain.v1.BlockHeaderInfo.prev_main_block_hash)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.prev_main_block_hash_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.prev_main_block_hash_.Set("", GetArena());
  }
  return released;
}
inline void BlockHeaderInfo::set_allocated_prev_main_block_hash(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.prev_main_block_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.prev_main_block_hash_.IsDefault()) {
    _impl_.prev_main_block_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cusf.sidechain.v1.BlockHeaderInfo.prev_main_block_hash)
}

// uint32 height = 4 [json_name = "height"];
inline void BlockHeaderInfo::clear_height() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline ::uint32_t BlockHeaderInfo::height() const {
  // @@protoc_insertion_point(field_get:cusf.sidechain.v1.BlockHeaderInfo.height)
  return _internal_height();
}
inline void BlockHeaderInfo::set_height(::uint32_t value) {
  _internal_set_height(value);
  _impl_._has_bits_[0] |= 0x00000008u;
  // @@protoc_insertion_point(field_set:cusf.sidechain.v1.BlockHeaderInfo.height)
}
inline ::uint32_t BlockHeaderInfo::_internal_height() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.height_;
}
inline void BlockHeaderInfo::_internal_set_height(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.height_ = value;
}

// -------------------------------------------------------------------

// BlockInfo

// -------------------------------------------------------------------

// GetMempoolTxsRequest

// -------------------------------------------------------------------

// GetMempoolTxsResponse

// .cusf.sidechain.v1.SequenceId sequence_id = 1 [json_name = "sequenceId"];
inline bool GetMempoolTxsResponse::has_sequence_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sequence_id_ != nullptr);
  return value;
}
inline void GetMempoolTxsResponse::clear_sequence_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sequence_id_ != nullptr) _impl_.sequence_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::cusf::sidechain::v1::SequenceId& GetMempoolTxsResponse::_internal_sequence_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cusf::sidechain::v1::SequenceId* p = _impl_.sequence_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::cusf::sidechain::v1::SequenceId&>(::cusf::sidechain::v1::_SequenceId_default_instance_);
}
inline const ::cusf::sidechain::v1::SequenceId& GetMempoolTxsResponse::sequence_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cusf.sidechain.v1.GetMempoolTxsResponse.sequence_id)
  return _internal_sequence_id();
}
inline void GetMempoolTxsResponse::unsafe_arena_set_allocated_sequence_id(
    ::cusf::sidechain::v1::SequenceId* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sequence_id_);
  }
  _impl_.sequence_id_ = reinterpret_cast<::cusf::sidechain::v1::SequenceId*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cusf.sidechain.v1.GetMempoolTxsResponse.sequence_id)
}
inline ::cusf::sidechain::v1::SequenceId* PROTOBUF_NULLABLE GetMempoolTxsResponse::release_sequence_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cusf::sidechain::v1::SequenceId* released = _impl_.sequence_id_;
  _impl_.sequence_id_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cusf::sidechain::v1::SequenceId* PROTOBUF_NULLABLE GetMempoolTxsResponse::unsafe_arena_release_sequence_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cusf.sidechain.v1.GetMempoolTxsResponse.sequence_id)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cusf::sidechain::v1::SequenceId* temp = _impl_.sequence_id_;
  _impl_.sequence_id_ = nullptr;
  return temp;
}
inline ::cusf::sidechain::v1::SequenceId* PROTOBUF_NONNULL GetMempoolTxsResponse::_internal_mutable_sequence_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sequence_id_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cusf::sidechain::v1::SequenceId>(GetArena());
    _impl_.sequence_id_ = reinterpret_cast<::cusf::sidechain::v1::SequenceId*>(p);
  }
  return _impl_.sequence_id_;
}
inline ::cusf::sidechain::v1::SequenceId* PROTOBUF_NONNULL GetMempoolTxsResponse::mutable_sequence_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cusf::sidechain::v1::SequenceId* _msg = _internal_mutable_sequence_id();
  // @@protoc_insertion_point(field_mutable:cusf.sidechain.v1.GetMempoolTxsResponse.sequence_id)
  return _msg;
}
inline void GetMempoolTxsResponse::set_allocated_sequence_id(::cusf::sidechain::v1::SequenceId* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sequence_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.sequence_id_ = reinterpret_cast<::cusf::sidechain::v1::SequenceId*>(value);
  // @@protoc_insertion_point(field_set_allocated:cusf.sidechain.v1.GetMempoolTxsResponse.sequence_id)
}

// -------------------------------------------------------------------

// GetUtxosRequest

// -------------------------------------------------------------------

// GetUtxosResponse

// -------------------------------------------------------------------

// SubmitTransactionRequest

// bytes transaction = 1 [json_name = "transaction"];
inline void SubmitTransactionRequest::clear_transaction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.transaction_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SubmitTransactionRequest::transaction() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cusf.sidechain.v1.SubmitTransactionRequest.transaction)
  return _internal_transaction();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SubmitTransactionRequest::set_transaction(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.transaction_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cusf.sidechain.v1.SubmitTransactionRequest.transaction)
}
inline std::string* PROTOBUF_NONNULL SubmitTransactionRequest::mutable_transaction()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_transaction();
  // @@protoc_insertion_point(field_mutable:cusf.sidechain.v1.SubmitTransactionRequest.transaction)
  return _s;
}
inline const std::string& SubmitTransactionRequest::_internal_transaction() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.transaction_.Get();
}
inline void SubmitTransactionRequest::_internal_set_transaction(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.transaction_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL SubmitTransactionRequest::_internal_mutable_transaction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.transaction_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE SubmitTransactionRequest::release_transaction() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cusf.sidechain.v1.SubmitTransactionRequest.transaction)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.transaction_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.transaction_.Set("", GetArena());
  }
  return released;
}
inline void SubmitTransactionRequest::set_allocated_transaction(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.transaction_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.transaction_.IsDefault()) {
    _impl_.transaction_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cusf.sidechain.v1.SubmitTransactionRequest.transaction)
}

// -------------------------------------------------------------------

// SubmitTransactionResponse

// -------------------------------------------------------------------

// SubscribeEventsRequest

// -------------------------------------------------------------------

// SubscribeEventsResponse_Event_ConnectBlock

// .cusf.sidechain.v1.BlockHeaderInfo header_info = 1 [json_name = "headerInfo"];
inline bool SubscribeEventsResponse_Event_ConnectBlock::has_header_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.header_info_ != nullptr);
  return value;
}
inline void SubscribeEventsResponse_Event_ConnectBlock::clear_header_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_info_ != nullptr) _impl_.header_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::cusf::sidechain::v1::BlockHeaderInfo& SubscribeEventsResponse_Event_ConnectBlock::_internal_header_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cusf::sidechain::v1::BlockHeaderInfo* p = _impl_.header_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::cusf::sidechain::v1::BlockHeaderInfo&>(::cusf::sidechain::v1::_BlockHeaderInfo_default_instance_);
}
inline const ::cusf::sidechain::v1::BlockHeaderInfo& SubscribeEventsResponse_Event_ConnectBlock::header_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cusf.sidechain.v1.SubscribeEventsResponse.Event.ConnectBlock.header_info)
  return _internal_header_info();
}
inline void SubscribeEventsResponse_Event_ConnectBlock::unsafe_arena_set_allocated_header_info(
    ::cusf::sidechain::v1::BlockHeaderInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_info_);
  }
  _impl_.header_info_ = reinterpret_cast<::cusf::sidechain::v1::BlockHeaderInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cusf.sidechain.v1.SubscribeEventsResponse.Event.ConnectBlock.header_info)
}
inline ::cusf::sidechain::v1::BlockHeaderInfo* PROTOBUF_NULLABLE SubscribeEventsResponse_Event_ConnectBlock::release_header_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cusf::sidechain::v1::BlockHeaderInfo* released = _impl_.header_info_;
  _impl_.header_info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cusf::sidechain::v1::BlockHeaderInfo* PROTOBUF_NULLABLE SubscribeEventsResponse_Event_ConnectBlock::unsafe_arena_release_header_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cusf.sidechain.v1.SubscribeEventsResponse.Event.ConnectBlock.header_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cusf::sidechain::v1::BlockHeaderInfo* temp = _impl_.header_info_;
  _impl_.header_info_ = nullptr;
  return temp;
}
inline ::cusf::sidechain::v1::BlockHeaderInfo* PROTOBUF_NONNULL SubscribeEventsResponse_Event_ConnectBlock::_internal_mutable_header_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.header_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cusf::sidechain::v1::BlockHeaderInfo>(GetArena());
    _impl_.header_info_ = reinterpret_cast<::cusf::sidechain::v1::BlockHeaderInfo*>(p);
  }
  return _impl_.header_info_;
}
inline ::cusf::sidechain::v1::BlockHeaderInfo* PROTOBUF_NONNULL SubscribeEventsResponse_Event_ConnectBlock::mutable_header_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cusf::sidechain::v1::BlockHeaderInfo* _msg = _internal_mutable_header_info();
  // @@protoc_insertion_point(field_mutable:cusf.sidechain.v1.SubscribeEventsResponse.Event.ConnectBlock.header_info)
  return _msg;
}
inline void SubscribeEventsResponse_Event_ConnectBlock::set_allocated_header_info(::cusf::sidechain::v1::BlockHeaderInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.header_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.header_info_ = reinterpret_cast<::cusf::sidechain::v1::BlockHeaderInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:cusf.sidechain.v1.SubscribeEventsResponse.Event.ConnectBlock.header_info)
}

// .cusf.sidechain.v1.BlockInfo block_info = 2 [json_name = "blockInfo"];
inline bool SubscribeEventsResponse_Event_ConnectBlock::has_block_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.block_info_ != nullptr);
  return value;
}
inline void SubscribeEventsResponse_Event_ConnectBlock::clear_block_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.block_info_ != nullptr) _impl_.block_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::cusf::sidechain::v1::BlockInfo& SubscribeEventsResponse_Event_ConnectBlock::_internal_block_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cusf::sidechain::v1::BlockInfo* p = _impl_.block_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::cusf::sidechain::v1::BlockInfo&>(::cusf::sidechain::v1::_BlockInfo_default_instance_);
}
inline const ::cusf::sidechain::v1::BlockInfo& SubscribeEventsResponse_Event_ConnectBlock::block_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cusf.sidechain.v1.SubscribeEventsResponse.Event.ConnectBlock.block_info)
  return _internal_block_info();
}
inline void SubscribeEventsResponse_Event_ConnectBlock::unsafe_arena_set_allocated_block_info(
    ::cusf::sidechain::v1::BlockInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_info_);
  }
  _impl_.block_info_ = reinterpret_cast<::cusf::sidechain::v1::BlockInfo*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cusf.sidechain.v1.SubscribeEventsResponse.Event.ConnectBlock.block_info)
}
inline ::cusf::sidechain::v1::BlockInfo* PROTOBUF_NULLABLE SubscribeEventsResponse_Event_ConnectBlock::release_block_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cusf::sidechain::v1::BlockInfo* released = _impl_.block_info_;
  _impl_.block_info_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cusf::sidechain::v1::BlockInfo* PROTOBUF_NULLABLE SubscribeEventsResponse_Event_ConnectBlock::unsafe_arena_release_block_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cusf.sidechain.v1.SubscribeEventsResponse.Event.ConnectBlock.block_info)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cusf::sidechain::v1::BlockInfo* temp = _impl_.block_info_;
  _impl_.block_info_ = nullptr;
  return temp;
}
inline ::cusf::sidechain::v1::BlockInfo* PROTOBUF_NONNULL SubscribeEventsResponse_Event_ConnectBlock::_internal_mutable_block_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.block_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cusf::sidechain::v1::BlockInfo>(GetArena());
    _impl_.block_info_ = reinterpret_cast<::cusf::sidechain::v1::BlockInfo*>(p);
  }
  return _impl_.block_info_;
}
inline ::cusf::sidechain::v1::BlockInfo* PROTOBUF_NONNULL SubscribeEventsResponse_Event_ConnectBlock::mutable_block_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::cusf::sidechain::v1::BlockInfo* _msg = _internal_mutable_block_info();
  // @@protoc_insertion_point(field_mutable:cusf.sidechain.v1.SubscribeEventsResponse.Event.ConnectBlock.block_info)
  return _msg;
}
inline void SubscribeEventsResponse_Event_ConnectBlock::set_allocated_block_info(::cusf::sidechain::v1::BlockInfo* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.block_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.block_info_ = reinterpret_cast<::cusf::sidechain::v1::BlockInfo*>(value);
  // @@protoc_insertion_point(field_set_allocated:cusf.sidechain.v1.SubscribeEventsResponse.Event.ConnectBlock.block_info)
}

// -------------------------------------------------------------------

// SubscribeEventsResponse_Event_DisconnectBlock

// bytes block_hash = 1 [json_name = "blockHash"];
inline void SubscribeEventsResponse_Event_DisconnectBlock::clear_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_hash_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SubscribeEventsResponse_Event_DisconnectBlock::block_hash() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cusf.sidechain.v1.SubscribeEventsResponse.Event.DisconnectBlock.block_hash)
  return _internal_block_hash();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SubscribeEventsResponse_Event_DisconnectBlock::set_block_hash(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.block_hash_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cusf.sidechain.v1.SubscribeEventsResponse.Event.DisconnectBlock.block_hash)
}
inline std::string* PROTOBUF_NONNULL SubscribeEventsResponse_Event_DisconnectBlock::mutable_block_hash()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_block_hash();
  // @@protoc_insertion_point(field_mutable:cusf.sidechain.v1.SubscribeEventsResponse.Event.DisconnectBlock.block_hash)
  return _s;
}
inline const std::string& SubscribeEventsResponse_Event_DisconnectBlock::_internal_block_hash() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_hash_.Get();
}
inline void SubscribeEventsResponse_Event_DisconnectBlock::_internal_set_block_hash(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.block_hash_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL SubscribeEventsResponse_Event_DisconnectBlock::_internal_mutable_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.block_hash_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE SubscribeEventsResponse_Event_DisconnectBlock::release_block_hash() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cusf.sidechain.v1.SubscribeEventsResponse.Event.DisconnectBlock.block_hash)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.block_hash_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.block_hash_.Set("", GetArena());
  }
  return released;
}
inline void SubscribeEventsResponse_Event_DisconnectBlock::set_allocated_block_hash(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.block_hash_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.block_hash_.IsDefault()) {
    _impl_.block_hash_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cusf.sidechain.v1.SubscribeEventsResponse.Event.DisconnectBlock.block_hash)
}

// -------------------------------------------------------------------

// SubscribeEventsResponse_Event_MempoolTxAdded

// bytes txid = 1 [json_name = "txid"];
inline void SubscribeEventsResponse_Event_MempoolTxAdded::clear_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SubscribeEventsResponse_Event_MempoolTxAdded::txid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cusf.sidechain.v1.SubscribeEventsResponse.Event.MempoolTxAdded.txid)
  return _internal_txid();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SubscribeEventsResponse_Event_MempoolTxAdded::set_txid(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.txid_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cusf.sidechain.v1.SubscribeEventsResponse.Event.MempoolTxAdded.txid)
}
inline std::string* PROTOBUF_NONNULL SubscribeEventsResponse_Event_MempoolTxAdded::mutable_txid()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_txid();
  // @@protoc_insertion_point(field_mutable:cusf.sidechain.v1.SubscribeEventsResponse.Event.MempoolTxAdded.txid)
  return _s;
}
inline const std::string& SubscribeEventsResponse_Event_MempoolTxAdded::_internal_txid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.txid_.Get();
}
inline void SubscribeEventsResponse_Event_MempoolTxAdded::_internal_set_txid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.txid_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL SubscribeEventsResponse_Event_MempoolTxAdded::_internal_mutable_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.txid_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE SubscribeEventsResponse_Event_MempoolTxAdded::release_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cusf.sidechain.v1.SubscribeEventsResponse.Event.MempoolTxAdded.txid)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.txid_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.txid_.Set("", GetArena());
  }
  return released;
}
inline void SubscribeEventsResponse_Event_MempoolTxAdded::set_allocated_txid(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.txid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.txid_.IsDefault()) {
    _impl_.txid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cusf.sidechain.v1.SubscribeEventsResponse.Event.MempoolTxAdded.txid)
}

// -------------------------------------------------------------------

// SubscribeEventsResponse_Event_MempoolTxRemoved

// bytes txid = 1 [json_name = "txid"];
inline void SubscribeEventsResponse_Event_MempoolTxRemoved::clear_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.txid_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& SubscribeEventsResponse_Event_MempoolTxRemoved::txid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cusf.sidechain.v1.SubscribeEventsResponse.Event.MempoolTxRemoved.txid)
  return _internal_txid();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void SubscribeEventsResponse_Event_MempoolTxRemoved::set_txid(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.txid_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:cusf.sidechain.v1.SubscribeEventsResponse.Event.MempoolTxRemoved.txid)
}
inline std::string* PROTOBUF_NONNULL SubscribeEventsResponse_Event_MempoolTxRemoved::mutable_txid()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_txid();
  // @@protoc_insertion_point(field_mutable:cusf.sidechain.v1.SubscribeEventsResponse.Event.MempoolTxRemoved.txid)
  return _s;
}
inline const std::string& SubscribeEventsResponse_Event_MempoolTxRemoved::_internal_txid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.txid_.Get();
}
inline void SubscribeEventsResponse_Event_MempoolTxRemoved::_internal_set_txid(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.txid_.Set(value, GetArena());
}
inline std::string* PROTOBUF_NONNULL SubscribeEventsResponse_Event_MempoolTxRemoved::_internal_mutable_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.txid_.Mutable( GetArena());
}
inline std::string* PROTOBUF_NULLABLE SubscribeEventsResponse_Event_MempoolTxRemoved::release_txid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cusf.sidechain.v1.SubscribeEventsResponse.Event.MempoolTxRemoved.txid)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.txid_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.txid_.Set("", GetArena());
  }
  return released;
}
inline void SubscribeEventsResponse_Event_MempoolTxRemoved::set_allocated_txid(std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.txid_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.txid_.IsDefault()) {
    _impl_.txid_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:cusf.sidechain.v1.SubscribeEventsResponse.Event.MempoolTxRemoved.txid)
}

// -------------------------------------------------------------------

// SubscribeEventsResponse_Event

// .cusf.sidechain.v1.SubscribeEventsResponse.Event.ConnectBlock connect_block = 1 [json_name = "connectBlock"];
inline bool SubscribeEventsResponse_Event::has_connect_block() const {
  return event_case() == kConnectBlock;
}
inline bool SubscribeEventsResponse_Event::_internal_has_connect_block() const {
  return event_case() == kConnectBlock;
}
inline void SubscribeEventsResponse_Event::set_has_connect_block() {
  _impl_._oneof_case_[0] = kConnectBlock;
}
inline void SubscribeEventsResponse_Event::clear_connect_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (event_case() == kConnectBlock) {
    if (GetArena() == nullptr) {
      delete _impl_.event_.connect_block_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_.connect_block_);
    }
    clear_has_event();
  }
}
inline ::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock* PROTOBUF_NULLABLE SubscribeEventsResponse_Event::release_connect_block() {
  // @@protoc_insertion_point(field_release:cusf.sidechain.v1.SubscribeEventsResponse.Event.connect_block)
  if (event_case() == kConnectBlock) {
    clear_has_event();
    auto* temp = reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock*>(_impl_.event_.connect_block_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.event_.connect_block_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock& SubscribeEventsResponse_Event::_internal_connect_block() const {
  return event_case() == kConnectBlock ? *reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock*>(_impl_.event_.connect_block_) : reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock&>(::cusf::sidechain::v1::_SubscribeEventsResponse_Event_ConnectBlock_default_instance_);
}
inline const ::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock& SubscribeEventsResponse_Event::connect_block() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cusf.sidechain.v1.SubscribeEventsResponse.Event.connect_block)
  return _internal_connect_block();
}
inline ::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock* PROTOBUF_NULLABLE SubscribeEventsResponse_Event::unsafe_arena_release_connect_block() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cusf.sidechain.v1.SubscribeEventsResponse.Event.connect_block)
  if (event_case() == kConnectBlock) {
    clear_has_event();
    auto* temp = reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock*>(_impl_.event_.connect_block_);
    _impl_.event_.connect_block_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SubscribeEventsResponse_Event::unsafe_arena_set_allocated_connect_block(
    ::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_event();
  if (value) {
    set_has_connect_block();
    _impl_.event_.connect_block_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cusf.sidechain.v1.SubscribeEventsResponse.Event.connect_block)
}
inline ::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock* PROTOBUF_NONNULL SubscribeEventsResponse_Event::_internal_mutable_connect_block() {
  if (event_case() != kConnectBlock) {
    clear_event();
    set_has_connect_block();
    _impl_.event_.connect_block_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock>(GetArena()));
  }
  return reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock*>(_impl_.event_.connect_block_);
}
inline ::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock* PROTOBUF_NONNULL SubscribeEventsResponse_Event::mutable_connect_block()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event_ConnectBlock* _msg = _internal_mutable_connect_block();
  // @@protoc_insertion_point(field_mutable:cusf.sidechain.v1.SubscribeEventsResponse.Event.connect_block)
  return _msg;
}

// .cusf.sidechain.v1.SubscribeEventsResponse.Event.DisconnectBlock disconnect_block = 2 [json_name = "disconnectBlock"];
inline bool SubscribeEventsResponse_Event::has_disconnect_block() const {
  return event_case() == kDisconnectBlock;
}
inline bool SubscribeEventsResponse_Event::_internal_has_disconnect_block() const {
  return event_case() == kDisconnectBlock;
}
inline void SubscribeEventsResponse_Event::set_has_disconnect_block() {
  _impl_._oneof_case_[0] = kDisconnectBlock;
}
inline void SubscribeEventsResponse_Event::clear_disconnect_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (event_case() == kDisconnectBlock) {
    if (GetArena() == nullptr) {
      delete _impl_.event_.disconnect_block_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_.disconnect_block_);
    }
    clear_has_event();
  }
}
inline ::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock* PROTOBUF_NULLABLE SubscribeEventsResponse_Event::release_disconnect_block() {
  // @@protoc_insertion_point(field_release:cusf.sidechain.v1.SubscribeEventsResponse.Event.disconnect_block)
  if (event_case() == kDisconnectBlock) {
    clear_has_event();
    auto* temp = reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock*>(_impl_.event_.disconnect_block_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.event_.disconnect_block_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock& SubscribeEventsResponse_Event::_internal_disconnect_block() const {
  return event_case() == kDisconnectBlock ? *reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock*>(_impl_.event_.disconnect_block_) : reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock&>(::cusf::sidechain::v1::_SubscribeEventsResponse_Event_DisconnectBlock_default_instance_);
}
inline const ::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock& SubscribeEventsResponse_Event::disconnect_block() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cusf.sidechain.v1.SubscribeEventsResponse.Event.disconnect_block)
  return _internal_disconnect_block();
}
inline ::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock* PROTOBUF_NULLABLE SubscribeEventsResponse_Event::unsafe_arena_release_disconnect_block() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cusf.sidechain.v1.SubscribeEventsResponse.Event.disconnect_block)
  if (event_case() == kDisconnectBlock) {
    clear_has_event();
    auto* temp = reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock*>(_impl_.event_.disconnect_block_);
    _impl_.event_.disconnect_block_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SubscribeEventsResponse_Event::unsafe_arena_set_allocated_disconnect_block(
    ::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_event();
  if (value) {
    set_has_disconnect_block();
    _impl_.event_.disconnect_block_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cusf.sidechain.v1.SubscribeEventsResponse.Event.disconnect_block)
}
inline ::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock* PROTOBUF_NONNULL SubscribeEventsResponse_Event::_internal_mutable_disconnect_block() {
  if (event_case() != kDisconnectBlock) {
    clear_event();
    set_has_disconnect_block();
    _impl_.event_.disconnect_block_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock>(GetArena()));
  }
  return reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock*>(_impl_.event_.disconnect_block_);
}
inline ::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock* PROTOBUF_NONNULL SubscribeEventsResponse_Event::mutable_disconnect_block()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event_DisconnectBlock* _msg = _internal_mutable_disconnect_block();
  // @@protoc_insertion_point(field_mutable:cusf.sidechain.v1.SubscribeEventsResponse.Event.disconnect_block)
  return _msg;
}

// .cusf.sidechain.v1.SubscribeEventsResponse.Event.MempoolTxAdded mempool_tx_added = 3 [json_name = "mempoolTxAdded"];
inline bool SubscribeEventsResponse_Event::has_mempool_tx_added() const {
  return event_case() == kMempoolTxAdded;
}
inline bool SubscribeEventsResponse_Event::_internal_has_mempool_tx_added() const {
  return event_case() == kMempoolTxAdded;
}
inline void SubscribeEventsResponse_Event::set_has_mempool_tx_added() {
  _impl_._oneof_case_[0] = kMempoolTxAdded;
}
inline void SubscribeEventsResponse_Event::clear_mempool_tx_added() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (event_case() == kMempoolTxAdded) {
    if (GetArena() == nullptr) {
      delete _impl_.event_.mempool_tx_added_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_.mempool_tx_added_);
    }
    clear_has_event();
  }
}
inline ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded* PROTOBUF_NULLABLE SubscribeEventsResponse_Event::release_mempool_tx_added() {
  // @@protoc_insertion_point(field_release:cusf.sidechain.v1.SubscribeEventsResponse.Event.mempool_tx_added)
  if (event_case() == kMempoolTxAdded) {
    clear_has_event();
    auto* temp = reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded*>(_impl_.event_.mempool_tx_added_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.event_.mempool_tx_added_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded& SubscribeEventsResponse_Event::_internal_mempool_tx_added() const {
  return event_case() == kMempoolTxAdded ? *reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded*>(_impl_.event_.mempool_tx_added_) : reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded&>(::cusf::sidechain::v1::_SubscribeEventsResponse_Event_MempoolTxAdded_default_instance_);
}
inline const ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded& SubscribeEventsResponse_Event::mempool_tx_added() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cusf.sidechain.v1.SubscribeEventsResponse.Event.mempool_tx_added)
  return _internal_mempool_tx_added();
}
inline ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded* PROTOBUF_NULLABLE SubscribeEventsResponse_Event::unsafe_arena_release_mempool_tx_added() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cusf.sidechain.v1.SubscribeEventsResponse.Event.mempool_tx_added)
  if (event_case() == kMempoolTxAdded) {
    clear_has_event();
    auto* temp = reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded*>(_impl_.event_.mempool_tx_added_);
    _impl_.event_.mempool_tx_added_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SubscribeEventsResponse_Event::unsafe_arena_set_allocated_mempool_tx_added(
    ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_event();
  if (value) {
    set_has_mempool_tx_added();
    _impl_.event_.mempool_tx_added_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cusf.sidechain.v1.SubscribeEventsResponse.Event.mempool_tx_added)
}
inline ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded* PROTOBUF_NONNULL SubscribeEventsResponse_Event::_internal_mutable_mempool_tx_added() {
  if (event_case() != kMempoolTxAdded) {
    clear_event();
    set_has_mempool_tx_added();
    _impl_.event_.mempool_tx_added_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded>(GetArena()));
  }
  return reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded*>(_impl_.event_.mempool_tx_added_);
}
inline ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded* PROTOBUF_NONNULL SubscribeEventsResponse_Event::mutable_mempool_tx_added()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxAdded* _msg = _internal_mutable_mempool_tx_added();
  // @@protoc_insertion_point(field_mutable:cusf.sidechain.v1.SubscribeEventsResponse.Event.mempool_tx_added)
  return _msg;
}

// .cusf.sidechain.v1.SubscribeEventsResponse.Event.MempoolTxRemoved mempool_tx_removed = 4 [json_name = "mempoolTxRemoved"];
inline bool SubscribeEventsResponse_Event::has_mempool_tx_removed() const {
  return event_case() == kMempoolTxRemoved;
}
inline bool SubscribeEventsResponse_Event::_internal_has_mempool_tx_removed() const {
  return event_case() == kMempoolTxRemoved;
}
inline void SubscribeEventsResponse_Event::set_has_mempool_tx_removed() {
  _impl_._oneof_case_[0] = kMempoolTxRemoved;
}
inline void SubscribeEventsResponse_Event::clear_mempool_tx_removed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (event_case() == kMempoolTxRemoved) {
    if (GetArena() == nullptr) {
      delete _impl_.event_.mempool_tx_removed_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.event_.mempool_tx_removed_);
    }
    clear_has_event();
  }
}
inline ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved* PROTOBUF_NULLABLE SubscribeEventsResponse_Event::release_mempool_tx_removed() {
  // @@protoc_insertion_point(field_release:cusf.sidechain.v1.SubscribeEventsResponse.Event.mempool_tx_removed)
  if (event_case() == kMempoolTxRemoved) {
    clear_has_event();
    auto* temp = reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved*>(_impl_.event_.mempool_tx_removed_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.event_.mempool_tx_removed_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved& SubscribeEventsResponse_Event::_internal_mempool_tx_removed() const {
  return event_case() == kMempoolTxRemoved ? *reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved*>(_impl_.event_.mempool_tx_removed_) : reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved&>(::cusf::sidechain::v1::_SubscribeEventsResponse_Event_MempoolTxRemoved_default_instance_);
}
inline const ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved& SubscribeEventsResponse_Event::mempool_tx_removed() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cusf.sidechain.v1.SubscribeEventsResponse.Event.mempool_tx_removed)
  return _internal_mempool_tx_removed();
}
inline ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved* PROTOBUF_NULLABLE SubscribeEventsResponse_Event::unsafe_arena_release_mempool_tx_removed() {
  // @@protoc_insertion_point(field_unsafe_arena_release:cusf.sidechain.v1.SubscribeEventsResponse.Event.mempool_tx_removed)
  if (event_case() == kMempoolTxRemoved) {
    clear_has_event();
    auto* temp = reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved*>(_impl_.event_.mempool_tx_removed_);
    _impl_.event_.mempool_tx_removed_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void SubscribeEventsResponse_Event::unsafe_arena_set_allocated_mempool_tx_removed(
    ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_event();
  if (value) {
    set_has_mempool_tx_removed();
    _impl_.event_.mempool_tx_removed_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cusf.sidechain.v1.SubscribeEventsResponse.Event.mempool_tx_removed)
}
inline ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved* PROTOBUF_NONNULL SubscribeEventsResponse_Event::_internal_mutable_mempool_tx_removed() {
  if (event_case() != kMempoolTxRemoved) {
    clear_event();
    set_has_mempool_tx_removed();
    _impl_.event_.mempool_tx_removed_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved>(GetArena()));
  }
  return reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved*>(_impl_.event_.mempool_tx_removed_);
}
inline ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved* PROTOBUF_NONNULL SubscribeEventsResponse_Event::mutable_mempool_tx_removed()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event_MempoolTxRemoved* _msg = _internal_mutable_mempool_tx_removed();
  // @@protoc_insertion_point(field_mutable:cusf.sidechain.v1.SubscribeEventsResponse.Event.mempool_tx_removed)
  return _msg;
}

inline bool SubscribeEventsResponse_Event::has_event() const {
  return event_case() != EVENT_NOT_SET;
}
inline void SubscribeEventsResponse_Event::clear_has_event() {
  _impl_._oneof_case_[0] = EVENT_NOT_SET;
}
inline SubscribeEventsResponse_Event::EventCase SubscribeEventsResponse_Event::event_case() const {
  return SubscribeEventsResponse_Event::EventCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// SubscribeEventsResponse

// .cusf.sidechain.v1.SequenceId sequence_id = 1 [json_name = "sequenceId"];
inline bool SubscribeEventsResponse::has_sequence_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.sequence_id_ != nullptr);
  return value;
}
inline void SubscribeEventsResponse::clear_sequence_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sequence_id_ != nullptr) _impl_.sequence_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::cusf::sidechain::v1::SequenceId& SubscribeEventsResponse::_internal_sequence_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cusf::sidechain::v1::SequenceId* p = _impl_.sequence_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::cusf::sidechain::v1::SequenceId&>(::cusf::sidechain::v1::_SequenceId_default_instance_);
}
inline const ::cusf::sidechain::v1::SequenceId& SubscribeEventsResponse::sequence_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cusf.sidechain.v1.SubscribeEventsResponse.sequence_id)
  return _internal_sequence_id();
}
inline void SubscribeEventsResponse::unsafe_arena_set_allocated_sequence_id(
    ::cusf::sidechain::v1::SequenceId* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sequence_id_);
  }
  _impl_.sequence_id_ = reinterpret_cast<::cusf::sidechain::v1::SequenceId*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cusf.sidechain.v1.SubscribeEventsResponse.sequence_id)
}
inline ::cusf::sidechain::v1::SequenceId* PROTOBUF_NULLABLE SubscribeEventsResponse::release_sequence_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cusf::sidechain::v1::SequenceId* released = _impl_.sequence_id_;
  _impl_.sequence_id_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cusf::sidechain::v1::SequenceId* PROTOBUF_NULLABLE SubscribeEventsResponse::unsafe_arena_release_sequence_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cusf.sidechain.v1.SubscribeEventsResponse.sequence_id)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::cusf::sidechain::v1::SequenceId* temp = _impl_.sequence_id_;
  _impl_.sequence_id_ = nullptr;
  return temp;
}
inline ::cusf::sidechain::v1::SequenceId* PROTOBUF_NONNULL SubscribeEventsResponse::_internal_mutable_sequence_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.sequence_id_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cusf::sidechain::v1::SequenceId>(GetArena());
    _impl_.sequence_id_ = reinterpret_cast<::cusf::sidechain::v1::SequenceId*>(p);
  }
  return _impl_.sequence_id_;
}
inline ::cusf::sidechain::v1::SequenceId* PROTOBUF_NONNULL SubscribeEventsResponse::mutable_sequence_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::cusf::sidechain::v1::SequenceId* _msg = _internal_mutable_sequence_id();
  // @@protoc_insertion_point(field_mutable:cusf.sidechain.v1.SubscribeEventsResponse.sequence_id)
  return _msg;
}
inline void SubscribeEventsResponse::set_allocated_sequence_id(::cusf::sidechain::v1::SequenceId* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.sequence_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.sequence_id_ = reinterpret_cast<::cusf::sidechain::v1::SequenceId*>(value);
  // @@protoc_insertion_point(field_set_allocated:cusf.sidechain.v1.SubscribeEventsResponse.sequence_id)
}

// .cusf.sidechain.v1.SubscribeEventsResponse.Event event = 2 [json_name = "event"];
inline bool SubscribeEventsResponse::has_event() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.event_ != nullptr);
  return value;
}
inline void SubscribeEventsResponse::clear_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.event_ != nullptr) _impl_.event_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::cusf::sidechain::v1::SubscribeEventsResponse_Event& SubscribeEventsResponse::_internal_event() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::cusf::sidechain::v1::SubscribeEventsResponse_Event* p = _impl_.event_;
  return p != nullptr ? *p : reinterpret_cast<const ::cusf::sidechain::v1::SubscribeEventsResponse_Event&>(::cusf::sidechain::v1::_SubscribeEventsResponse_Event_default_instance_);
}
inline const ::cusf::sidechain::v1::SubscribeEventsResponse_Event& SubscribeEventsResponse::event() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:cusf.sidechain.v1.SubscribeEventsResponse.event)
  return _internal_event();
}
inline void SubscribeEventsResponse::unsafe_arena_set_allocated_event(
    ::cusf::sidechain::v1::SubscribeEventsResponse_Event* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.event_);
  }
  _impl_.event_ = reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:cusf.sidechain.v1.SubscribeEventsResponse.event)
}
inline ::cusf::sidechain::v1::SubscribeEventsResponse_Event* PROTOBUF_NULLABLE SubscribeEventsResponse::release_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event* released = _impl_.event_;
  _impl_.event_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::cusf::sidechain::v1::SubscribeEventsResponse_Event* PROTOBUF_NULLABLE SubscribeEventsResponse::unsafe_arena_release_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:cusf.sidechain.v1.SubscribeEventsResponse.event)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event* temp = _impl_.event_;
  _impl_.event_ = nullptr;
  return temp;
}
inline ::cusf::sidechain::v1::SubscribeEventsResponse_Event* PROTOBUF_NONNULL SubscribeEventsResponse::_internal_mutable_event() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.event_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::cusf::sidechain::v1::SubscribeEventsResponse_Event>(GetArena());
    _impl_.event_ = reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event*>(p);
  }
  return _impl_.event_;
}
inline ::cusf::sidechain::v1::SubscribeEventsResponse_Event* PROTOBUF_NONNULL SubscribeEventsResponse::mutable_event()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::cusf::sidechain::v1::SubscribeEventsResponse_Event* _msg = _internal_mutable_event();
  // @@protoc_insertion_point(field_mutable:cusf.sidechain.v1.SubscribeEventsResponse.event)
  return _msg;
}
inline void SubscribeEventsResponse::set_allocated_event(::cusf::sidechain::v1::SubscribeEventsResponse_Event* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.event_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = value->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.event_ = reinterpret_cast<::cusf::sidechain::v1::SubscribeEventsResponse_Event*>(value);
  // @@protoc_insertion_point(field_set_allocated:cusf.sidechain.v1.SubscribeEventsResponse.event)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace sidechain
}  // namespace cusf


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // cusf_2fsidechain_2fv1_2fsidechain_2eproto_2epb_2eh
